<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech on Jason Eckert&#39;s Website and Blog</title>
    <link>https://jasoneckert.github.io/tags/tech/</link>
    <description>Recent content in tech on Jason Eckert&#39;s Website and Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jasoneckert.github.io/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RISCy business: The long and convoluted rise of today&#39;s dominant computing platform</title>
      <link>https://jasoneckert.github.io/myblog/riscy-business/</link>
      <pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/riscy-business/</guid>
      <description>RISC vs CISC Traditionally, most computing platforms were built with the burden of software in mind. To ensure that a software program could be written easily and with fewer instructions, additional circuitry was added to the central processing unit (CPU) to compensate. This was referred to as complex instruction set computing (CISC). CISC architecture is still common today thanks to the x86 architecture used by Intel and AMD CPUs in most workstations and servers.</description>
    </item>
    
    <item>
      <title>How modern open source projects work</title>
      <link>https://jasoneckert.github.io/myblog/modern-open-source/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/modern-open-source/</guid>
      <description>By definition, &amp;ldquo;open source&amp;rdquo; has little to do with how software is actually created.
Instead, open source refers to how the source code for a software development project is distributed and consumed by software developers working on other projects. It is essentially a blanket term that refers to any software that makes its source code available to others. To be open source, the software project must be released under an open source license, of which there are two main categories: Copyleft and Permissive.</description>
    </item>
    
    <item>
      <title>How Linux Certification Has Evolved Over The Years</title>
      <link>https://jasoneckert.github.io/myblog/linux-certification/</link>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/linux-certification/</guid>
      <description>Because organizations continually adopt new technologies, the need for skilled IT professionals to support those technologies is always increasing. Technology certification has been the most common skills benchmark used for hiring and promotion in the IT industry since the early 1990s, with Linux certification being one of the most sought-after. After all, knowing how to use, configure and administer the Linux operating system is prerequisite for a wide variety of different IT job roles, including server administrators, cloud administrators, devops engineers, site reliability engineers, cybersecurity analysts, penetration testers, and software developers.</description>
    </item>
    
    <item>
      <title>Dual-booting Asahi Linux on your Apple Silicon Mac</title>
      <link>https://jasoneckert.github.io/myblog/asahi-linux/</link>
      <pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/asahi-linux/</guid>
      <description>What is Asahi Linux? Asahi (https://asahilinux.org/) is a Linux distribution based on Arch Linux ARM that you can install natively on Apple Silicon Macs with an M1- or M2-based CPU. I&amp;rsquo;ve been using it daily as a software development workstation for over 3 months now on an M1 Mac Mini (16GB RAM, 500GB SSD), and it&amp;rsquo;s unbelievably fast. It is 100% funded by Patreon and developed full-time by Hector Marcan with many other contributors.</description>
    </item>
    
    <item>
      <title>The Power of Swag in the Tech Industry</title>
      <link>https://jasoneckert.github.io/myblog/the-power-of-swag/</link>
      <pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-power-of-swag/</guid>
      <description>What is swag? Simply put, swag is any branded freebie that you get from a vendor, and it&amp;rsquo;s been used for marketing at tech industry events and showcases since the 1970s. Some common types of swag include stickers, mugs, water bottles, pins, luggage tags, plushies, squishies, t-shirts, socks, hats, tote bags, throw blankets, lanyards, sunglasses, lip balm, custom Lego sets, branded card/board games, journals/notebooks, sticky notes, phone stands, USB power banks, cables/accessories, USB thumb drives, and Bluetooth thingy&amp;rsquo;s.</description>
    </item>
    
    <item>
      <title>Ontario&#39;s Computer Part 2: The LEXICON Server</title>
      <link>https://jasoneckert.github.io/myblog/lexicon-computer/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/lexicon-computer/</guid>
      <description>As I described in my previous blog post, the Burroughs ICON was a very cool UNIX-like computer developed by the Ontario governement for use within schools during the 1980s and early 1990s.
But because ICON computers were all diskless workstations, they were completely useless without a network and LEXICON file server. After all, the QNX operating system and programs that ran memory-resident on each ICON had to first be downloaded from the LEXICON across an ARCNET network.</description>
    </item>
    
    <item>
      <title>Ontario&#39;s Computer: The Burroughs ICON</title>
      <link>https://jasoneckert.github.io/myblog/icon-computer/</link>
      <pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/icon-computer/</guid>
      <description>Nicknamed the bionic beaver, the ICON was a Canadian computer funded by the Ontario government and used in schools province wide. It was designed by CEMCorp (Canadian Educational Microprocessor Corporation) and manufactured by Burroughs (later renamed to Unisys). Moreover, it ran the QNX UNIX-like operating system, which was also developed in Canada by two University of Waterloo students. If you took a computer programming course in high school during the 1980s or early 1990s, you likely remember learning C, BASIC or Pascal on the ICON, as well as many UNIX commands that would pay off later in college or university.</description>
    </item>
    
    <item>
      <title>Configuring the i3 Window Manager</title>
      <link>https://jasoneckert.github.io/myblog/configuring-i3/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/configuring-i3/</guid>
      <description>Why use the i3 window manager If you&amp;rsquo;re a Linux user, you&amp;rsquo;re probably using a desktop environment that looks like Windows (e.g. KDE Plasma) or macOS (e.g. GNOME). But these desktop environments use a great deal of resources and are cumbersome when it comes to flexibility and navigation between applications and code. To solve these problems, most software developers and Linux/UNIX administrators install and use a tiling window manager.
While there are many different tiling window managers available, i3 is the most common one.</description>
    </item>
    
    <item>
      <title>Brewing the Best Coffee</title>
      <link>https://jasoneckert.github.io/myblog/coffee/</link>
      <pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/coffee/</guid>
      <description>It&amp;rsquo;s no secret that coffee is one of the most important factors in the development of any technology, including software. In this post, I&amp;rsquo;ll outline how you can create the perfect cup of coffee to enhance your love of the bean as well as boost software development productivity.
Over the years, I&amp;rsquo;ve needlessly spent thousands of dollars on expensive coffee-making equipment, including fancy coffee grinders and expresso machines.
But I no longer use any of it, because I can make a better cup of coffee cheaper and faster with just these four items:</description>
    </item>
    
    <item>
      <title>The Power of RISC architecture</title>
      <link>https://jasoneckert.github.io/myblog/power-of-risc/</link>
      <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/power-of-risc/</guid>
      <description>This part of the 1995 Hackers movie shown above is right on par for the time. After all, by the mid 1990s Reduced Instruction Set Computer (RISC) processors were seen as the future of computing by most in the tech industry.
By using a simplified instruction set, computers with RISC processors at the time could perform tasks in a quarter of the time compared to computers that had a traditional Complex Instruction Set Computer (CISC) processor.</description>
    </item>
    
    <item>
      <title>SPARCbook teardown</title>
      <link>https://jasoneckert.github.io/myblog/sparcbook-teardown/</link>
      <pubDate>Sat, 29 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/sparcbook-teardown/</guid>
      <description>Back in 2019, I picked up a rare SPARC-based laptop from the 1990s running Solaris UNIX (marketed as the ultimate UNIX portable on the Tadpole website in 1997). You can read my blog post on it here: SPARCbook 3000ST: The coolest 90s laptop. It occasionally shows up on Hacker News, and I get plenty of comments whenever I post it on Reddit.
However, I&amp;rsquo;ve always been curious as to the internals.</description>
    </item>
    
    <item>
      <title>Understanding the Cult of Mac</title>
      <link>https://jasoneckert.github.io/myblog/cult-of-mac/</link>
      <pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/cult-of-mac/</guid>
      <description>Exactly 3 years ago, I wrote a non-fiction work of satire called Escaping the Cult of Mac: A Guide from a Cult Survivor to win a bet with some members of the local tech community in Kitchener-Waterloo. It was incredibly fun, and it got plenty of laughs. A friend recently requested I do up a shorter, safe-for-work version that could easily be shared. And this blog post is essentially that!</description>
    </item>
    
    <item>
      <title>2021 in Review</title>
      <link>https://jasoneckert.github.io/myblog/2021-in-review/</link>
      <pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2021-in-review/</guid>
      <description>While 2020 introduced a slew of changes to everyone&amp;rsquo;s personal and professional lives, these changes were considerably less pronounced for those of us working in tech fields. After all, most software engineering and server/cloud configuration was already performed remotely before the pandemic using long-standing processes/tools. Adapting to online tech teaching in the college was a welcome challenge, and also more relevant for the industry.
As 2020 was ending, we all knew that 2021 would bring vaccine rollouts but not a complete return to normalcy.</description>
    </item>
    
    <item>
      <title>Kubernetes Quickstart</title>
      <link>https://jasoneckert.github.io/myblog/kubernetes-quickstart/</link>
      <pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/kubernetes-quickstart/</guid>
      <description>Over the past two decades, we&amp;rsquo;ve shifted from running servers bare metal to running them almost exclusively within virtual machines (VMs). More recently we&amp;rsquo;ve seen another shift to running servers within containers. Like VMs, containers are servers that contain a unique filesystem, IP stack and software. But unlike VMs, containers do not contain a full operating system or operating system kernel. Instead they rely on an underlying operating system that runs the container using a container runtime, such as Docker.</description>
    </item>
    
    <item>
      <title>Installing a fast Linux server on an M1-based Mac</title>
      <link>https://jasoneckert.github.io/myblog/installing-linux-server-on-mac-m1/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/installing-linux-server-on-mac-m1/</guid>
      <description>One of the biggest worries that IT users have regarding Apple&amp;rsquo;s new ARM-based M1 platform is the ability to run virtual machines (VMs) of other operating systems using hypervisor software. And while it&amp;rsquo;s possible to run virtual machines of both Windows and Linux operating systems made for the Intel platform on the M1, the performance cost of translating Intel instructions to ARM is high (even with the optimizations Apple has within their M1 CPU).</description>
    </item>
    
    <item>
      <title>ARM on the desktop is here to stay</title>
      <link>https://jasoneckert.github.io/myblog/arm-on-the-desktop/</link>
      <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/arm-on-the-desktop/</guid>
      <description>Back in the 1990s, Reduced Instruction Set Computing (RISC) architecture was widely seen as the future. UNIX workstations from Silicon Graphics and Sun Microsystems boasted powerful RISC CPUs at the time, but were prohibitively expensive and died out in the early 2000s as a result. Only the Acorn RISC Machine (ARM) architecture used in low-power devices (e.g. PDAs) survived past the early 2000s, and only because of the rise of mobile devices that relied on battery power.</description>
    </item>
    
    <item>
      <title>An overview of cloud buzz words</title>
      <link>https://jasoneckert.github.io/myblog/cloud-buzz-words/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/cloud-buzz-words/</guid>
      <description>As this Dilbert comic eloquently illustrates, there&amp;rsquo;s no shortage of cloud buzz words thrown around today. But as strange and complex as they may sound (even to seasoned developers and system administrators), they are not difficult to understand. In this blog post, I&amp;rsquo;ll walk through the different components and features of the cloud, explaining the associated buzz words along the way.
What is the cloud? Back in the early 1990s, when the US government sold off parts of their ARPAnet and NSFnet to private companies (later called Internet Service Providers, or ISPs) to create the public Internet, there wasn&amp;rsquo;t anything exciting about the Internet at all.</description>
    </item>
    
    <item>
      <title>Work-from-home is the new BlackBerry</title>
      <link>https://jasoneckert.github.io/myblog/work-from-home-is-the-new-blackberry/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/work-from-home-is-the-new-blackberry/</guid>
      <description>I vividly remember the first time I was issued a BlackBerry smartphone back in the 2000s for work. I&amp;rsquo;d read emails while in line at the Pita shop during lunch hour, formulating a plan and response before I returned to my desk to reply. For emails that required a quick response, I&amp;rsquo;d hammer out a response on the BlackBerry keyboard while in line. And having access to my Outlook calendar on the BlackBerry meant that I could view, schedule and prioritize my tasks anywhere.</description>
    </item>
    
    <item>
      <title>Copyleft is dying</title>
      <link>https://jasoneckert.github.io/myblog/copyleft-is-dying/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/copyleft-is-dying/</guid>
      <description>Software licensing is the catalyst that drives the modern tech industry. This is because reusable software code released under an open source license (permitting its reuse) is the norm for nearly all software development today. After all, if we couldn&amp;rsquo;t reuse existing code in new software projects, it would take far longer to bring technologies to market, and the overall software industry wouldn&amp;rsquo;t be able to evolve as quickly. Moreover, there are two major types of open source licenses.</description>
    </item>
    
    <item>
      <title>UNIX/Linux is now a core skill for anyone working in tech</title>
      <link>https://jasoneckert.github.io/myblog/linux-is-now-a-core-skill/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/linux-is-now-a-core-skill/</guid>
      <description>If you had asked me in the 1990s whether most people in the tech world would be using a UNIX or Linux shell to manage their servers, I would have chuckled and said &amp;ldquo;No.&amp;rdquo; But two decades later we find ourselves in a world where 96% of the cloud is comprised of Linux servers running Web apps made with open source frameworks, and the majority of software development is done on UNIX (macOS) or Linux workstations.</description>
    </item>
    
    <item>
      <title>Cybersecurity in a Nutshell</title>
      <link>https://jasoneckert.github.io/myblog/cybersecurity-in-a-nutshell/</link>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/cybersecurity-in-a-nutshell/</guid>
      <description>Simply put, Cybersecurity is an umbrella term that encompasses all aspects of computer, network and data security. While Cybersecurity-specific job roles are commonplace in larger organizations, smaller organizations often require that existing IT roles perform Cybersecurity-specific tasks. And since Cybersecurity is only going to grow in importance over time, anyone working in IT should have a solid knowledge of it.
So what does Cybersecurity involve? You can divide cybersecurity into four main areas today:</description>
    </item>
    
    <item>
      <title>The future looks a lot like mainframe computing</title>
      <link>https://jasoneckert.github.io/myblog/mainframe-computing-is-the-future/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/mainframe-computing-is-the-future/</guid>
      <description>Mainframe computers, like the IBM one shown above, were the first digital computers that started appearing in big companies during the 1950s. They were room-sized behemoths of circuitry and steel primarily used to generate balance sheets and income statements. And while IBM still sells a small number of mainframe computers today, they only enjoyed mainstream popularity until the late 1980s.
While early mainframes were only accessed by the people who managed it, most mainframes of the 1970s and 1980s ran programs that were accessed by remote users via a dumb terminal.</description>
    </item>
    
    <item>
      <title>Relating Silicon Valley to the Toronto-Waterloo Corridor</title>
      <link>https://jasoneckert.github.io/myblog/silicon-valley-toronto-waterloo/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/silicon-valley-toronto-waterloo/</guid>
      <description>Silicon Valley is an HBO comedy series that aired from 2014-2019. It follows a group of software engineers as they journey from creating their own apps in a home-based tech incubator in California&amp;rsquo;s Silicon Valley to creating a new decentralized Internet in their own venture capital-funded tech company.
From the beginning, its creators (Mike Judge and Alec Berg) aimed to make the series an entertaining and accurate depiction of Silicon Valley tech culture, icons and events.</description>
    </item>
    
    <item>
      <title>Mastering the Zen of TrackPoint</title>
      <link>https://jasoneckert.github.io/myblog/mastering-the-zen-of-trackpoint/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/mastering-the-zen-of-trackpoint/</guid>
      <description>Lenovo (formerly IBM) ThinkPad laptops are widely known for three things:
An amazing keyboard (often touted as the best for professional work) Rugged build quality (it&amp;rsquo;s hard to kill a Thinkpad: https://youtu.be/OMilj81s9SI) The TrackPoint, which has been standard on ThinkPads since the first model in 1992 What is a TrackPoint? Simply put, it is an alternative to using a mouse or trackpad on laptops. To ensure that your index fingers can easily reach it, it&amp;rsquo;s situated in the middle of the keyboard between the G, H and B keys.</description>
    </item>
    
    <item>
      <title>The computer that saved Apple</title>
      <link>https://jasoneckert.github.io/myblog/the-computer-that-saved-apple/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-computer-that-saved-apple/</guid>
      <description>The very first iMac model (shown above) was released in 1998, came in one colour called Bondi Blue, and had a semi-translucent case that allowed you to see the components inside. It had a 233MHz PowerPC G3 CPU, 32MB of RAM, CD-ROM drive, and shipped with MacOS 8.1 (soon upgraded to MacOS 9 - the last version before Apple moved to Mac OS X).
While passing by a convenience store in my home town of Hespeler, I muttered in distaste when I noticed that someone had dumped a lot of furniture and various other household items next to the already-full dumpster at the back.</description>
    </item>
    
    <item>
      <title>An introduction to WireGuard VPN</title>
      <link>https://jasoneckert.github.io/myblog/an-introduction-to-wireguard-vpn/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/an-introduction-to-wireguard-vpn/</guid>
      <description>1. Why WireGuard? When it comes to encrypting traffic between systems, there are a wide variety of different Virtual Private Network (VPN) software available, some of which have been used since the 1990s. Each of them focus on different encryption algorithms and flow control strategies, alongside mechanisms for providing for secure authentication and negotiating encryption keys. Unfortunately, this complexity often translates to more problems, slower traffic, as well fewer use cases and supported operating systems.</description>
    </item>
    
    <item>
      <title>2020 in review</title>
      <link>https://jasoneckert.github.io/myblog/2020-in-review/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2020-in-review/</guid>
      <description>I know what you&amp;rsquo;re thinking - 2020 sucked! Worst year ever! The COVID-19 pandemic, no social gatherings, no dine-in restaurants, no gyms, the US Trumpster fire, and most importantly to those of us in the tech world: Red Hat terminating CentOS development.
Of course, most people will remember 2020 for the pandemic, and that&amp;rsquo;s completely understandable. None of us have experienced a pandemic in our lifetime, and both our society and economy were not prepared to deal with it gracefully.</description>
    </item>
    
    <item>
      <title>Seldom discussed tips for working in the tech industry</title>
      <link>https://jasoneckert.github.io/myblog/seldom-discussed-tech-industry-tips/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/seldom-discussed-tech-industry-tips/</guid>
      <description>There are plenty of blog posts on the Web that give sage advice for anyone working in the tech industry. However, most of them focus on the same topics: time management, resourcefulness, continuous learning, verbal and written communication skills, caffeine consumption, and so on.
In this blog post, I&amp;rsquo;ll discuss 6 tech industry tips that are rarely discussed online, but that are equally (if not more) important from my experience over the past three decades in this industry.</description>
    </item>
    
    <item>
      <title>5 Z shell features that will encourage you to switch from Bash</title>
      <link>https://jasoneckert.github.io/myblog/moving-from-bash-to-zsh/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/moving-from-bash-to-zsh/</guid>
      <description>The command line interface on your system is provided by a shell. And while there are dozens of different shells available to choose from, nearly every UNIX and Linux system over the past two decades has used the feature-rich Bash shell as the default login shell.
Although the Bash shell still remains the most common login shell used on UNIX and Linux systems, macOS and a few Linux distributions (e.</description>
    </item>
    
    <item>
      <title>Why I love teaching online</title>
      <link>https://jasoneckert.github.io/myblog/why-i-love-teaching-online/</link>
      <pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/why-i-love-teaching-online/</guid>
      <description>When the pandemic hit earlier this year, schools around the globe quickly embraced online teaching to continue their curriculum. While online teaching wasn&amp;rsquo;t entirely new in this space, it certainly wasn&amp;rsquo;t the norm. This meant that many teachers had to adapt quickly, as these 2 funny videos illustrate:
https://www.youtube.com/watch?v=CCe5PaeAeew https://www.youtube.com/watch?v=Zy_y9yOrgxk However, I&amp;rsquo;ve loved every part of this transition because I absolutely love teaching tech courses online.
Grant you, I&amp;rsquo;ve had some practice prior to 2020, as well as a general interest in how the Web could be used for education.</description>
    </item>
    
    <item>
      <title>A brief history of technology</title>
      <link>https://jasoneckert.github.io/myblog/a-brief-history-of-technology/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/a-brief-history-of-technology/</guid>
      <description>Technology is a crazy ride, and like that lyric in the Talking Heads song Once in a Lifetime, &amp;ldquo;&amp;hellip;you may ask yourself, well, how did I get here?&amp;rdquo;
If that&amp;rsquo;s the case, you&amp;rsquo;re in luck, because this post is a no-nonsense, give-me-the-big-picture timeline of what the heck happened in the technology landscape these past 50 years. Of course, not every little detail is in there. Just those that are actually important (in my expert opinion, of course ;-) Enjoy!</description>
    </item>
    
    <item>
      <title>Cybersecurity in the early 1990&#39;s</title>
      <link>https://jasoneckert.github.io/myblog/cybersecurity-in-the-90s/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/cybersecurity-in-the-90s/</guid>
      <description>Back in the late 1980&amp;rsquo;s and early 1990&amp;rsquo;s, I remember collecting MS-DOS computer viruses. I’d download them from an online Bulletin Board System (BBS) and store them on floppy disks in compressed format to prevent them from executing. For fun, some friends and I would occasionally release them on one of our systems to see what they did, and then reinstall MS-DOS afterwards. Most viruses didn’t do very much, but some others (e.</description>
    </item>
    
    <item>
      <title>Most people don&#39;t want a computer</title>
      <link>https://jasoneckert.github.io/myblog/most-people-dont-want-a-computer/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/most-people-dont-want-a-computer/</guid>
      <description>In the past few decades, people of all ages across North America have become technology-literate in some way or another. Many of them weren&amp;rsquo;t introduced to technology via desktop or laptop computers, but instead through a smartphone or tablet. Similarly, many desktop and laptop users have switched to using their smartphone or tablet over the past decade to interact with the online world.
After all, smartphones and tablets are incredibly easy to use.</description>
    </item>
    
    <item>
      <title>Open does not always mean Open Source</title>
      <link>https://jasoneckert.github.io/myblog/open-does-not-always-mean-open-source/</link>
      <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/open-does-not-always-mean-open-source/</guid>
      <description>In the technology world today, the term Open is most commonly associated with Open Source.
Open Source refers to software released under a license that gives other software developers access to modify the original Source code that was used to create the software. This, in turn allows other software developers worldwide to quickly identify and fix bugs and security loopholes, as well as make feature improvements to the software. Consequently, Open Source software evolves more rapidly than other (Closed Source) software, and is considered the gold standard for software today.</description>
    </item>
    
    <item>
      <title>Tracing difficult shell scripts</title>
      <link>https://jasoneckert.github.io/myblog/tracing-difficult-shell-scripts/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/tracing-difficult-shell-scripts/</guid>
      <description>Whether you&amp;rsquo;re an IT systems administrator, developer or devop working with Linux/UNIX shell scripts, you&amp;rsquo;re likely going to come across some that are not well documented and difficult to trace (read and understand) as a result.
While these scripts discourage others from tracing them, you can easily trace even the most difficult shell scripts if you follow good tracing procedures. Moreover, by tracing a difficult shell script, you build your knowledge of specific Linux/UNIX components, as well as scripting in general.</description>
    </item>
    
    <item>
      <title>So, you think online conferencing is new?</title>
      <link>https://jasoneckert.github.io/myblog/so-you-think-online-conferencing-is-new/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/so-you-think-online-conferencing-is-new/</guid>
      <description>The city that I live in (Cambridge, Ontario) was formed as an amalgamation of three smaller towns (Hespeler, Preston and Galt) in 1973. Hespeler gets its name from Jacob Hespeler, who built an impressive industrial empire in the town in 1845. Through his widespread influence, he secured railway access, as well as attracted engineering talent from as far away as Europe. By the start of World War I, Hespeler housed the largest textile mill in the British Empire, and had an electric passenger railway (Grand River Railway) that allowed easy transit to the rest of the region.</description>
    </item>
    
    <item>
      <title>Fundamental computer science concepts every software developer should know</title>
      <link>https://jasoneckert.github.io/myblog/fundamental-comp-sci/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/fundamental-comp-sci/</guid>
      <description>To be a software developer (a.k.a. programmer or software engineer) today, you don&amp;rsquo;t need a degree in computer science. In fact, computer science really isn&amp;rsquo;t about &amp;ldquo;how&amp;rdquo; you develop software today at all. It&amp;rsquo;s about how we approach software problems theoretically. And to be frank, you don&amp;rsquo;t need to worry about computer science theory to be a good software developer today. You just need to know how to solve problems using code, be good at using existing software frameworks, as well as know how to Google stuff and read programming language documentation.</description>
    </item>
    
    <item>
      <title>How to write an academic technical textbook</title>
      <link>https://jasoneckert.github.io/myblog/how-to-write-an-academic-technical-textbook/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/how-to-write-an-academic-technical-textbook/</guid>
      <description>If you head over to My published books page, you’ll see that I’ve written a large number of textbooks over the years for different publishers, as well as worked as a technical editor for many other titles.
Just this past week, I mentioned to a coworker that I’ve finished submitting the AU1 of the final chapter for my latest textbook Hands-On Windows Server 2019, ISBN: 978-0-357-43615-8 (I&amp;rsquo;ve revised this blog post in June to include a pic of my first printed copy).</description>
    </item>
    
    <item>
      <title>Why you should use technology less</title>
      <link>https://jasoneckert.github.io/myblog/why-you-should-use-technology-less/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/why-you-should-use-technology-less/</guid>
      <description>Over the past few years, I’ve taken to using technology less and less in my daily life.
I leave my phone in the car when going to a party or social event. I’ll only fetch it if I want to take a picture, and only after appreciating the moment I’d like to capture to the fullest. When I listen to music on my phone (via headphones) during the long walks I take to get exercise and relax, I don’t check my phone at all.</description>
    </item>
    
    <item>
      <title>The UNIX Philosophy in 2019</title>
      <link>https://jasoneckert.github.io/myblog/the-unix-philosophy-in-2019/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-unix-philosophy-in-2019/</guid>
      <description>Earlier this week, I did a presentation for WWITPRO that detailed the UNIX philosophy and its relevance today. Given the subject matter, I decided to do the presentation in PostScript on my SPARCbook running Sun Solaris 2.5.1. This blog post details the content of the presentation for posterity!
What is UNIX? Simply put, UNIX is an operating system that was created by Ken Thompson in 1969 that was rewritten shortly thereafter in Dennis Ritchie’s C programming language.</description>
    </item>
    
    <item>
      <title>SPARCbook 3000ST: The coolest 90s laptop</title>
      <link>https://jasoneckert.github.io/myblog/sparcbook3000st-the-coolest-90s-laptop/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/sparcbook3000st-the-coolest-90s-laptop/</guid>
      <description>A few weeks back I managed to pick up an incredibly rare laptop in immaculate condition for $50 on Kijiji: a Tadpole Technologies SPARCbook 3000ST from 1997 (it also came with two other working Pentium laptops from the 1990s).
I had to drive almost three hours to pick it up on the other side of Toronto, but for a SPARCbook it was definitely worth it seeing as I&amp;rsquo;m more likely to find the lost city of Atlantis than another one of these again.</description>
    </item>
    
    <item>
      <title>Cult of Mac Book</title>
      <link>https://jasoneckert.github.io/myblog/cult-of-mac-book/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/cult-of-mac-book/</guid>
      <description>A few weeks ago, I was out at a social event with a bunch of guys and gals from the local Linux/UNIX/developer/IT community (contrary to popular opinion, Linux/UNIX people know how to party hard).
At one point during the night, we were sitting at a round booth and poking fun at a total Apple fanboy in our group. Someone called him a “Cult of Mac member” and he replied, “And proud to be one - I could write the book on the cult!</description>
    </item>
    
    <item>
      <title>35th Anniversary of the Macintosh Computer</title>
      <link>https://jasoneckert.github.io/myblog/35-anniversary-of-macintosh/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/35-anniversary-of-macintosh/</guid>
      <description>35 years ago today, Apple announced their Macintosh computer. What made the Macintosh radically different at the time was its graphical user interface (GUI) that was navigated using a mouse (mice were very uncommon in 1984!).
The first Macintosh only had 128K of RAM and a Motorola 68000 CPU, but it was pretty snappy for the time. The picture at the top of this post is of my daughter next to an original Macintosh 128K (and yes, it still works).</description>
    </item>
    
    <item>
      <title>Using the Windows Subsystem for Linux</title>
      <link>https://jasoneckert.github.io/myblog/using-the-windows-subsystem-for-linux/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/using-the-windows-subsystem-for-linux/</guid>
      <description>1. So what is WSL? Simply put, it’s a kernel interface (lxcore &amp;amp; lxss) that allows 64-bit Linux binaries to run on a Window 10 or Windows Server 2019 kernel.
All you need to do is add the userland (file system structure and programs) from an existing Linux distribution, such as Ubuntu, Kali, Debian or SUSE, and that Linux distribution will run natively on the Windows kernel!
You must access the Linux distribution via a Windows program that associates the userland of the Linux distribution to the WSL (e.</description>
    </item>
    
    <item>
      <title>SSH Foo</title>
      <link>https://jasoneckert.github.io/myblog/ssh-foo/</link>
      <pubDate>Sun, 09 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/ssh-foo/</guid>
      <description>Last week, I gave a presentation at a local LUG (which is a Linux User’s Group, for anyone who hasn’t heard of those before) on the subject of SSH Foo.
In UNIX circles, we refer to tricks of the trade as “Kung Fu” or just “Fu” (which sounds rude), so it is spelled “Foo” ;-)
In this blog post, I’ll summarize my SSH Foo talk! Be aware that this is not an introduction to SSH, but a more advanced look at some interesting SSH features for those who are already comfortable with it.</description>
    </item>
    
    <item>
      <title>Three reasons why incubators breed failure</title>
      <link>https://jasoneckert.github.io/myblog/three-reasons-why-incubators-breed-failure/</link>
      <pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/three-reasons-why-incubators-breed-failure/</guid>
      <description>These past few years, I’ve provided various types of support for some tech incubators in the Kitchener-Waterloo region where I live (it’s a complex arrangement that I won’t go into within this post, but mostly involves helping people with technology implementation issues related to software). It’s not hard to find tech incubators nowadays - they’ve become quite popular this past decade, and larger cities often have several incubators of various sizes.</description>
    </item>
    
    <item>
      <title>How the cloud grew up around Linux</title>
      <link>https://jasoneckert.github.io/myblog/how-the-cloud-grew-up-around-linux/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/how-the-cloud-grew-up-around-linux/</guid>
      <description>Open source software has had a powerful effect on computing. When the ARPANET/NSFNET was sold to different companies in the 1990s to create the commercial Internet, nobody expected it to grow as fast as it did. It was the open source Apache Web server running on the open source Linux (and BSD UNIX) operating system that ultimately allowed the Internet to grow quickly and attract the attention of the world.</description>
    </item>
    
    <item>
      <title>A simple guide to git</title>
      <link>https://jasoneckert.github.io/myblog/a-simple-guide-to-git/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/a-simple-guide-to-git/</guid>
      <description>Simply put, Git is a version control system that can be used to keep track of the changes that you make to files over time - it allows you to revert files to a previous state, or see who made changes to a file at different times if several people are working the those files collaboratively.
Git was original developed back in 2005 by Linus Torvalds (the creator of Linux) to aid in making changes to the Linux kernel, but has since become the most common open source version control system used today.</description>
    </item>
    
    <item>
      <title>Devops Demystified</title>
      <link>https://jasoneckert.github.io/myblog/devops-demystified/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/devops-demystified/</guid>
      <description>Last week, my friend Scott Elliott did a great guest presentation at the college where he talked about, amongst other things, devops. Moreover, I’ve been involved myself in the setup and configuration of two software development workflows (which technically makes me a devop); one was in 2017 for a tech startup in Kitchener, and the other one was earlier this year for a much larger project at the University of Waterloo.</description>
    </item>
    
    <item>
      <title>Blockchain for IT pros</title>
      <link>https://jasoneckert.github.io/myblog/blockchain-for-it-pros/</link>
      <pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/blockchain-for-it-pros/</guid>
      <description>IT professionals are often asked to describe technologies to others within their organization, and this includes buzz words they may have heard in some tech article or trade magazine:
There’s definitely no shortage of these buzz words in the tech industry - “the cloud,” “the Web 2.0,” “XaaS,” “CyberSecurity,” and of course “bitcoin” and “blockchain” are layered as thick as possible within articles and blogs to bolster clicks, likes and shares.</description>
    </item>
    
    <item>
      <title>Halt and Catch Fire</title>
      <link>https://jasoneckert.github.io/myblog/halt-and-catch-fire/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/halt-and-catch-fire/</guid>
      <description>Halt and Catch Fire is an AMC television series that ran for four seasons from 2014-2017, and covers the culture and pivotal aspects of the computing industry from 1983 (just after the release of the IBM PC) to 1994 (when the Internet and World Wide Web exploded).
You can binge watch it on Netflix if you like today, and trust me - you won’t be disappointed! Halt and Catch Fire is the best drama I’ve ever seen - an emotional rollercoaster like no other.</description>
    </item>
    
    <item>
      <title>Lessons I&#39;ve learned from teaching 20 years of IT</title>
      <link>https://jasoneckert.github.io/myblog/20-years-of-teaching-lessons-learned/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/20-years-of-teaching-lessons-learned/</guid>
      <description>I actually started teaching on April 13th 1998 (20 years ago today).
It was my final year as a student at the University of Waterloo, and as I was finishing up writing my final exams I realized that I needed to actually go out and get a real job to support my family (I was married with a daughter at the time).
Prior to that, I had worked on some very cool technology projects for various companies (including some big names like Microsoft, DEC and SUN), as well as worked for the University as a Web developer and sysadmin.</description>
    </item>
    
    <item>
      <title>Ultimate UNIX timeline</title>
      <link>https://jasoneckert.github.io/myblog/ultimate-unix-timeline/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/ultimate-unix-timeline/</guid>
      <description>One thing that has always annoyed me about the Internet surrounds the history and evolution of UNIX-based operating systems. If you Google “UNIX timeline”, you’ll get a bunch of different results that are either incomplete, incorrect, complicated to the point where it’s unreadable, or a combination of all of these things.
So this blog post aims to rectify this!
Here are some important things to note about UNIX in general and each of the UNIX flavours depicted on this timeline:</description>
    </item>
    
    <item>
      <title>RIP PowerBook</title>
      <link>https://jasoneckert.github.io/myblog/rip-powerbook/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/rip-powerbook/</guid>
      <description>I took the picture at the top of this post sitting in Starbucks recently with my trusty, 12-year-old PowerBook G4 laptop from Apple. Those sitting around me have no idea how ancient my laptop is - they probably see the glow from the Apple logo on the back and realize that it’s just another Apple laptop.
But it’s more than just another laptop to me. It’s written over a dozen textbooks for various publishers, created countless curriculum documents for my college, and given well over a hundred presentations.</description>
    </item>
    
    <item>
      <title>The history of IT certification</title>
      <link>https://jasoneckert.github.io/myblog/history-of-it-certification/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/history-of-it-certification/</guid>
      <description>Nearly everyone working in an Information Technology (IT) field has at least one IT-related certification. This is because IT certification is commonly used as a skills benchmark for hiring and promotion, and it’s been that way for a long, long time.
So where did all this certification stuff start? If you look online, there isn’t even a Wikipedia page that can give you that answer - like many things in the technology world that predated the Internet, it just wasn’t important enough to keep track of in the Internet Age that started in the 1990s.</description>
    </item>
    
    <item>
      <title>2017 in review</title>
      <link>https://jasoneckert.github.io/myblog/2017-in-review/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2017-in-review/</guid>
      <description>So what happened in 2017?
Last year I thought I completed my basement arcade by getting Donkey Kong (see my blog post entitled &amp;ldquo;2016 in review&amp;rdquo;), but I was wrong! I actually got two new arcade games this year. The first one was an arcade machine I never thought I’d find in good working condition. It’s also the absolute coolest arcade game of the 1980s with its amazing vector graphics (as well as my all-time favourite arcade game)&amp;hellip;&amp;hellip;.</description>
    </item>
    
    <item>
      <title>RIP Solaris</title>
      <link>https://jasoneckert.github.io/myblog/rip-solaris/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/rip-solaris/</guid>
      <description>The 80s and 90s was a period of intense development in the computer hardware and software worlds. On the hardware side, processors started to become much more powerful, and the word on the streets was that RISC (Reduced Instruction Set Computing) was going to be the way of the future. Powerful RISC platforms emerged during this time, including Sun Microsystems SPARC, HP PA-RISC, SGI MIPS, IBM PowerPC, and the DEC Alpha - these platforms were very powerful, and ushered in 64-bit computing over a decade before it became common in home computers.</description>
    </item>
    
    <item>
      <title>Get ready for the chip wars!</title>
      <link>https://jasoneckert.github.io/myblog/get-ready-for-the-chip-wars/</link>
      <pubDate>Sat, 22 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/get-ready-for-the-chip-wars/</guid>
      <description>Intel and their x86 computing architecture have pretty much dominated the computing industry since the late 1980s. In other words, nearly all computers that you’ve used at work or home for the past three decades have used Intel’s proprietary x86 (and later, x64) CPUs. The Intel 80-386 running DOS and Win3.1 won the PC wars by the early 1990s. Then came the Intel 80-486, Pentium, Pentium II, Pentium III, Pentium IV, Core Duos, Core i7s, as well as the AMD equivalents that ran the same x86/x64 instruction sets.</description>
    </item>
    
    <item>
      <title>50 shades of Cray</title>
      <link>https://jasoneckert.github.io/myblog/50-shades-of-cray/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/50-shades-of-cray/</guid>
      <description>If you wanted a fast computer back in 1976, you bought the 5.5 ton, $9 million Cray-1 made by Cray Research. The Cray-1 was dubbed the first supercomputer as it was designed to be much faster than other (more massive) computers of the time.
It was incredibly successful in the large computing space and Cray subsequently released a much faster model called the Cray X-MP in 1983 (shown in the picture at the top of this post).</description>
    </item>
    
    <item>
      <title>Futuretech &#39;92</title>
      <link>https://jasoneckert.github.io/myblog/futuretech-92/</link>
      <pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/futuretech-92/</guid>
      <description>This year marks Canada’s 150th anniversary (1867-2017), and while there are some cool events happening this year (e.g. National Parks have free admission), there really isn’t a lot of hoopla surrounding it.
However, I have very fond memories of Canada’s 125th anniversary in 1992, because that’s when I got to go to Alberta as part of a student enrichment event.
In the summer of 1992, the Canadian government hosted an event called Futuretech ’92, where 125 of the top students from Eastern Canada were flown to Calgary for a week of educational motivation, and 125 of the top students from Western Canada were flown to Montreal for the same.</description>
    </item>
    
    <item>
      <title>The future of smartphones</title>
      <link>https://jasoneckert.github.io/myblog/the-future-of-smartphones/</link>
      <pubDate>Fri, 24 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-future-of-smartphones/</guid>
      <description>As you can see from the picture at the top of this post, last week BlackBerry’s smartphone market share fell to 0% in the global marketplace. In all fairness, this number reflects the number of devices running BlackBerry OS (not the number of BlackBerry-branded Android devices, which together with all other Android devices, comprise 82% of the market).
If you think back to 2007, BlackBerry pretty much owned the smartphone world that they created - they were too big to fail, and too proud to accept that Apple and Google could eat their cake.</description>
    </item>
    
    <item>
      <title>An evening with The Woz</title>
      <link>https://jasoneckert.github.io/myblog/an-evening-with-the-woz/</link>
      <pubDate>Thu, 29 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/an-evening-with-the-woz/</guid>
      <description>I specifically attended yesterday’s Fuzenation Technology &amp;amp; Music Summit in Kitchener, Ontario to hear Steve Wozniak (a.k.a. The Woz) speak.
In short, he’s the co-founder of Apple, and the engineer who created the Apple I and Apple II computers. The Apple II was the first successful, mass-produced personal computer, and as the Woz points out, the “first one that could play arcade games in full colour” (I still have an Apple II that I use to play arcade games like Donkey Kong).</description>
    </item>
    
    <item>
      <title>The Linux operating system turns 25 years old today</title>
      <link>https://jasoneckert.github.io/myblog/linux-turns-25/</link>
      <pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/linux-turns-25/</guid>
      <description>Today marks the 25th anniversary of the Linux operating system!
More specifically, it marks the day that Linus Torvalds announced his new operating system (that was later called Linux) in a newsgroup post:
From:torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds) Newsgroup: comp.os.minix Subject: What would you like to see most in minix? Summary: small poll for my new operating system Message-ID: 1991Aug25, 20578.9541@klaava.Helsinki.FI Date: 25 Aug 91 20:57:08 GMT Organization: University of Helsinki.</description>
    </item>
    
    <item>
      <title>The World Wide Web turns 25 years old today</title>
      <link>https://jasoneckert.github.io/myblog/www-turns-25/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/www-turns-25/</guid>
      <description>On August 6, 1991, Tim Berners-Lee created a post detailing his World Wide Web project on a newsgroup called alt.hypertext in order to entice others to collaborate with him and create and host Web pages for the World Wide Web. However, it wasn’t until August 23, 1991 that it was made publicly accessible for the world to see. You could argue that August 6 is the real birth of the World Wide Web, but most websites and news aggregators acknowledge August 23 as the true birth of the World Wide Web, including Facebook, which included it as a news item today for everyone!</description>
    </item>
    
    <item>
      <title>The dawn of personal computing</title>
      <link>https://jasoneckert.github.io/myblog/dawn-of-personal-computing/</link>
      <pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/dawn-of-personal-computing/</guid>
      <description>If you know me, or have read various sections of my website, you’ll know that I am a die hard member of the computing industry that also likes to collect vintage computers (this is actually quite common - you’d be surprised how many of my colleagues do the same).
Yesterday, I managed to find a very interesting canvas painting in Toronto (the picture at the top of this post), and just HAD to have it.</description>
    </item>
    
    <item>
      <title>Some NeXT level stuff</title>
      <link>https://jasoneckert.github.io/myblog/some-next-level-stuff/</link>
      <pubDate>Fri, 29 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/some-next-level-stuff/</guid>
      <description>1. What is NeXT? (pun intended) NeXT was the computer company that Steve Jobs (co-founder of Apple) created after he got kicked out of Apple in the 1980s. They made high-end UNIX workstations that were intended to rival Apple computers, and primarily targeted for the higher education and science/engineering markets. However, they were not as successful as their competitors in this market and when Steve Jobs returned to Apple in 1997, he ensured that Apple purchased NeXT.</description>
    </item>
    
    <item>
      <title>PowerShell Essentials for SysAdmins</title>
      <link>https://jasoneckert.github.io/myblog/powershell-essentials-for-sysadmins/</link>
      <pubDate>Sun, 06 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/powershell-essentials-for-sysadmins/</guid>
      <description>PowerShell is essentially a scripting language and shell (command prompt) that you can use on Windows systems. It’s basically Microsoft’s way of getting a powerful UNIX/Linux/Mac-like shell on the Windows platform (long overdue!). The first versions of PowerShell were pretty horrific, but it’s come a long way since then. PowerShell v4 and later is pretty decent (Win10 comes with PowerShell v5). Luckily, PowerShell v4 comes with Windows Server 2012, and since this post is geared towards sysadmins, I’ll focus everything on Windows Server 2012.</description>
    </item>
    
    <item>
      <title>2015 in review</title>
      <link>https://jasoneckert.github.io/myblog/2015-in-review/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2015-in-review/</guid>
      <description>2015 was an interesting year, and one that I really enjoyed!
I spent a lot of time getting/restoring/playing the last few arcade machines that I’ve wanted in my arcade collection - I just love the retro arcade hobby! As a result, I won’t be getting or restoring any more in 2016 at all (I have a few arcades that I want to work on to upgrade, but that’s about it).</description>
    </item>
    
    <item>
      <title>World of Commodore conference</title>
      <link>https://jasoneckert.github.io/myblog/world-of-commodore-conference/</link>
      <pubDate>Sat, 05 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/world-of-commodore-conference/</guid>
      <description>This is the first year that I’ve been to the World of Commodore event in Mississauga, Ontario. It&amp;rsquo;s a yearly gathering of Commodorks who create new software and hardware for vintage Commodore computers. I had no idea that it even existed until someone I knew told me about it. Since it’s relatively close to me, I just had to go. Plus, I have many Commodore computers in my vintage computer collection.</description>
    </item>
    
    <item>
      <title>Breathe new life into an old PowerBook G4 using Linux</title>
      <link>https://jasoneckert.github.io/myblog/breathe-new-life-into-an-old-powerbook-g4-with-linux/</link>
      <pubDate>Mon, 02 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/breathe-new-life-into-an-old-powerbook-g4-with-linux/</guid>
      <description>So what do you do when you have an old PowerBook that still works but can’t run the latest operating system (OS) and software? Well, you could sell it - but it won&amp;rsquo;t fetch much at all (less than $50 in most cases).
A better option is to install a currently-supported OS that runs really well on limited hardware&amp;hellip;&amp;hellip;.in other words, install Linux on it!
I recently installed the latest version of Debian Linux on my PowerBook G4 to make it useful again.</description>
    </item>
    
    <item>
      <title>The fastest computer I have ever owned!</title>
      <link>https://jasoneckert.github.io/myblog/the-fastest-computer-i-have-ever-owned/</link>
      <pubDate>Fri, 31 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-fastest-computer-i-have-ever-owned/</guid>
      <description>I know it’s been a while since I’ve blogged last&amp;hellip;.I’ve just been incredibly busy. This past month, I’ve been teaching a video game class at the college, writing the 4th edition of my Linux+ book for Cengage on an accelerated schedule, and managing four technology faculties&amp;hellip;&amp;hellip;all at the same time!
But today, I got a new computer: A Mac Pro (the higher end 6-core Xeon model with dual AMD FirePro D500s).</description>
    </item>
    
    <item>
      <title>The evolution of BYOD</title>
      <link>https://jasoneckert.github.io/myblog/the-evolution-of-byod/</link>
      <pubDate>Mon, 09 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-evolution-of-byod/</guid>
      <description>In the 1980s, email remained a luxury for a small number of larger organizations and universities. Mobile email did not exist. Instead, pagers and cellular telephones were the primary tools for mobile communication. However, in the early 1990s, email rose to prominence with the commercialization of the Internet. Although early smartphones did exist at this time (e.g. IBM’s Simon), email was not considered a mobile technology.
But by the mid 1990s, the computing landscape had exploded.</description>
    </item>
    
    <item>
      <title>Microsoft ReFS vs Oracle ZFS - FIGHT!</title>
      <link>https://jasoneckert.github.io/myblog/refs-vs-zfs-fight/</link>
      <pubDate>Tue, 25 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/refs-vs-zfs-fight/</guid>
      <description>In the past, most IT admins have put their faith in systems and SANs (Storage Area Networks) that use RAID (Redundant Array of Inexpensive Disks) technology. RAID can be used to combine hard disks together into simple volumes (called RAID-0, or JBOD) that aren’t fault tolerant, but can also be used to create mirrored volumes where both drives are identical in case one fails (called RAID-1), or striped volumes with parity where data is written across several disks with parity information that can be used to calculate the missing data if a drive fails (called RAID-5).</description>
    </item>
    
    <item>
      <title>The evolution of Information Technology</title>
      <link>https://jasoneckert.github.io/myblog/evolution-of-info-tech/</link>
      <pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/evolution-of-info-tech/</guid>
      <description>As a Dean for the technology faculties of a private college in Canada, I’m always looking to make our programs more aligned to the industry - my motto is: always look forward and never look back!
However, when it comes to Information Technology (IT), I regularly find that the general perception of IT jobs is stuck in the past by at least a decade. I can’t tell you how many times I’ve met people who think that IT guys are stuck in the back closet of some company doing some menial job, such as re-soldering chips on a computer motherboard much like working on the engine of an old car.</description>
    </item>
    
    <item>
      <title>Marshall McLuhan was right</title>
      <link>https://jasoneckert.github.io/myblog/marshall-mcluhan-was-right/</link>
      <pubDate>Sat, 13 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/marshall-mcluhan-was-right/</guid>
      <description>Everyone understands, to some degree, the impact that technology has on our lives. However, if you are an avid reader of “idea” books (for lack of a better word), then you also know that some people understand it poorly at best.
Take, for example, the book The Shallows by Nicholas Carr. Carr argues that the Internet has reduced our ability to carefully reason through problems and use our imagination. And plenty of people have taken the time to carefully point out the flaws in his views.</description>
    </item>
    
    <item>
      <title>Mocap in action</title>
      <link>https://jasoneckert.github.io/myblog/mocap-in-action/</link>
      <pubDate>Thu, 13 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/mocap-in-action/</guid>
      <description>I’ve always been a big fan of Ubisoft games - I remember when Splinter Cell was released for the Xbox - I spent every waking minute of my spare time playing it. I loved the graphics, shading, storyline, stealth gameplay (quite frustrating at times) - everything. In fact, I love the whole Splinter Cell series. Best yet, this series is developed almost entirely at the Ubisoft Toronto studio right now.</description>
    </item>
    
    <item>
      <title>A successful hackathon at our Kitchener campus!</title>
      <link>https://jasoneckert.github.io/myblog/a-successful-hackathon-at-our-kitchener-campus/</link>
      <pubDate>Mon, 10 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/a-successful-hackathon-at-our-kitchener-campus/</guid>
      <description>In August, I worked with our Microsoft Student Partner (MSP) at the Kitchener campus (Mickey) to organize a 3-day Hackathon for creating Windows 8 Metro apps and games using HTML5/Javascript (technically it’s not called Metro anymore). It just took place this past weekend (Sept 7th - 9th), and was a huge undertaking for Mickey and I, but in the end it turned out amazingly well!
The college was very good at coordinating the event (somewhat last minute because of a staff change), and Microsoft was incredibly generous - they provided a ton of food (Tim Hortons breakfast each day, and a big lunch each day), t-shirts, giveaways, prizes (Microsoft ArcTouch mice for the winners, and a Windows Phone for the GoDevMental draw).</description>
    </item>
    
    <item>
      <title>Arcade game CPUs</title>
      <link>https://jasoneckert.github.io/myblog/arcade-game-cpus/</link>
      <pubDate>Sun, 02 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/arcade-game-cpus/</guid>
      <description>I’ve been getting into arcade games pretty heavily this year, and my posts have reflected this for sure ;-) Today’s post is actually a request from John Spitz, who emailed me after reading some of my other video game posts - he wanted to know if there was a typical progression in the types of hardware used in arcade games over the years.
The short answer is “yes” as you can see in the diagram I made at the top of this post.</description>
    </item>
    
    <item>
      <title>How the term &#39;cloud&#39; was invented</title>
      <link>https://jasoneckert.github.io/myblog/how-the-term-cloud-was-coined/</link>
      <pubDate>Thu, 26 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/how-the-term-cloud-was-coined/</guid>
      <description>Back in the 1990s, you could look smart my talking about the “Information Superhighway” (the Internet). In the early 2000s, the catch-phase of the day was “eCommerce” (buying crap on the Internet), and in the late 2000s non-technical managers would often toot about “Web 2.0” (an imaginary Internet that basically is the current Internet, but with more content).
Around 2010, non-technical managers, CIOs, and executives were struggling to find a new BS phrase to call the Internet that will make them look good in meetings.</description>
    </item>
    
    <item>
      <title>QNX on a moon rover</title>
      <link>https://jasoneckert.github.io/myblog/qnx-on-a-moon-rover/</link>
      <pubDate>Mon, 02 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/qnx-on-a-moon-rover/</guid>
      <description>Back in September 2011, a group of McMaster business and engineering students started a project aimed to build a moon rover that would be run by the QNX operating system on a BlackBerry PlayBook - a Canadian initiative with Canadian technologies (QNX is 100% Canadian). Here is a link to the original article on CrackBerry.com from the beginning of the project: https://crackberry.com/forums-new-group-aims-put-blackberry-playbook-powered-rover-moon
I reached out to them because of that article since I’ve had experience with QNX and PlayBook development.</description>
    </item>
    
    <item>
      <title>SOPA and PIPA</title>
      <link>https://jasoneckert.github.io/myblog/sopa-and-pipa/</link>
      <pubDate>Sat, 21 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/sopa-and-pipa/</guid>
      <description>With the massive SOPA/PIPA website content blackout on January 18th (including major sites such as Wikipedia), the general public suddenly became far more educated on digital freedom issues.
The music and movie industry has amassed a fortune in the last 50 years selling music and movies before the dawn of the Internet. Back then, if you wanted music, you had to buy it on some physical medium such as a cassette tape or CD.</description>
    </item>
    
    <item>
      <title>2011 in review</title>
      <link>https://jasoneckert.github.io/myblog/2011-in-review/</link>
      <pubDate>Fri, 30 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2011-in-review/</guid>
      <description>Personal/Work-Related Events: I started my new job of Dean of Technology in January. Basically twice the work but the same money. Most of the time it’s a thankless job (because you have to deal with complaints and bitching from everyone), but there is the odd job perk such as flex time and attending social events and conferences. I think the best part is that my official job description has a section that requires that I possess Strong communications skills (fluent in English &amp;amp; Klingon), as well as excellent interpersonal, analytical, strategic, conflict resolution, management, and organizational skills (this is what happens when non-geek HR people ask you for feedback in creating your job description).</description>
    </item>
    
    <item>
      <title>Hard drives are dead</title>
      <link>https://jasoneckert.github.io/myblog/hard-drives-are-dead/</link>
      <pubDate>Sat, 10 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/hard-drives-are-dead/</guid>
      <description>That may seem like a bold statement. And it is. However, Apple said the same thing about the floppy in 1997 when they introduced the iMac without it, and it slowly disappeared afterwards. ZDnet said the same thing about optical media (CDs/DVDs) in 2009 when USB flash drives reached critical mass - and of course optical media is slowly disappearing as we speak (the DVD drive in my Alienware laptop died shortly after I got it, but I never called Dell to replace it because I never use it anyways).</description>
    </item>
    
    <item>
      <title>The transputer</title>
      <link>https://jasoneckert.github.io/myblog/the-transputer/</link>
      <pubDate>Thu, 17 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-transputer/</guid>
      <description>So what the heck is a transputer? Well, it is a RISC CPU design from a company in England called INMOS that was designed so that it could interface with other CPUs of the same type in a massively parallel fashion (like a mini supercomputer).
The reason it was made was because CISC CPU designs of the 1980s were getting too bulky and people thought that it would be hard to advance them (of course they were wrong - never doubt engineers!</description>
    </item>
    
    <item>
      <title>BCE, CE, and the new IE</title>
      <link>https://jasoneckert.github.io/myblog/bce-ce-ie/</link>
      <pubDate>Mon, 22 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/bce-ce-ie/</guid>
      <description>I Google everything. What I find annoying is this: When you Google something that existed before the Internet and has no ongoing importance today (such as local landmarks that have since disappeared), there is literally NOTHING on the Internet about it.
For example, Leisure Lodge was a very large and glorious hall on the outskirts of Preston (now a part of Cambridge, Ontario) that was THE place to go from the 1950s to 1970s - they had their own big band group (the John Kostigian orchestra), and in the 1970s, they were the biggest disco joint around (they even hosted the Miss Nude World Competition one year).</description>
    </item>
    
    <item>
      <title>Jaron Lanier on technology</title>
      <link>https://jasoneckert.github.io/myblog/jaron-lanier-on-technology/</link>
      <pubDate>Sun, 23 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/jaron-lanier-on-technology/</guid>
      <description>Jaron Lanier is a technologist who is known for coining the term “virtual reality” in the 1980s (he started VPL Research - the first virtual reality company).
I saw him speak during on the of the debates at the Quantum to Cosmos festival last year (a Pi Institute event in Waterloo, Ontario), and quickly Googled him (since he was the only person during the debate who actually said anything worth listening to).</description>
    </item>
    
    <item>
      <title>Copyright in Canada</title>
      <link>https://jasoneckert.github.io/myblog/copyright-in-canada/</link>
      <pubDate>Sat, 23 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/copyright-in-canada/</guid>
      <description>Thirty years ago, people bought music on a record&amp;hellip;.a tangible thing like any other item for sale in a store. Now, people can download information (text, music, movies, etc.) from the Internet effortlessly. This copying of information has threatened the business models of many large and powerful companies such as music labels and movie producers. And these companies have reacted to their shrinking profits by abusing copyright and suing their customers rather than changing their business models.</description>
    </item>
    
    <item>
      <title>The Amazon Kindle ROCKS!</title>
      <link>https://jasoneckert.github.io/myblog/the-amazon-kindle-rocks/</link>
      <pubDate>Tue, 22 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-amazon-kindle-rocks/</guid>
      <description>Recently, the Amazon Kindle 2 (International Edition) arrived in Canada (the last country to get it :-), and I recently picked one up. Since its original introduction in November 2007, I have watched reviews of it fly around the Internet and on blogs such as GeekBrief.tv.
Although the reviews were generally positive, I really couldn’t visualize myself replacing my book collection with a Kindle for the simple reason that books have their own distinctive “experience” (and smell :-).</description>
    </item>
    
    <item>
      <title>IBM hard drive from 1981</title>
      <link>https://jasoneckert.github.io/myblog/ibm-hard-drive-1981/</link>
      <pubDate>Tue, 27 May 2008 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/ibm-hard-drive-1981/</guid>
      <description>This picture is of an IBM Model 3380 Hard Drive from 1981. Because it looks like a nuclear device or jet engine, I was able to convince my neighbour that I was generating my own nuclear power from now on, as well as the people at the Chrysler convention that it was an electric engine for a transport truck (I was passing them when going to a high school tech presentation at Bingemans where I used this as a fun prop).</description>
    </item>
    
    <item>
      <title>The Amazon Kindle: Friend or foe?</title>
      <link>https://jasoneckert.github.io/myblog/amazon-kindle-friend-or-foe/</link>
      <pubDate>Thu, 22 Nov 2007 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/amazon-kindle-friend-or-foe/</guid>
      <description>There has been a lot of hype this week about Kindle - Amazon’s eBook reader.
I have always regarded eBooks (also referred to as Digital Ink) as evil. They are almost always DRM (Digital Rights Management) protected so that you can’t share information with others and typically require an expensive eBook reader.
On the other side, the idea of storing my book collection on a nice small aesthetic digital device seems attractive to me as a technophile.</description>
    </item>
    
    <item>
      <title>Thank you, Apple</title>
      <link>https://jasoneckert.github.io/myblog/thankyou-apple/</link>
      <pubDate>Sat, 27 Oct 2007 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/thankyou-apple/</guid>
      <description>I installed Macintosh OS X 10.5 Leopard on all my Macs today. When you upgrade an OS, you always expect to lose some system settings and have some applications that don’t like the new OS. As a result, I chose to install Leopard on my PowerBook G4 first. It has tons of software and I customized it to the max, so I naturally expected to spend a while tweaking it after the upgrade to get an idea of what I can expect when I upgrade my other computers.</description>
    </item>
    
    <item>
      <title>Server closet Buddha shrine</title>
      <link>https://jasoneckert.github.io/myblog/server-closet-buddha-shrine/</link>
      <pubDate>Fri, 10 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/server-closet-buddha-shrine/</guid>
      <description>For the past 2 years, I have had a Buddha Shrine in the server closet in my office. I carefully researched proper Buddha Shrine requirements and styles on Google before I chose the above arrangement (Buddha must be elevated and surrounded by objects that represent tokens of life).
Why did I do this? Simple. To speed up our current Internet access and reduce the number of times that we need to reboot/reset classroom routers (when caches fill up, etc.</description>
    </item>
    
    <item>
      <title>When Marketing chooses the cover</title>
      <link>https://jasoneckert.github.io/myblog/when-marketing-chooses-the-cover/</link>
      <pubDate>Thu, 26 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/when-marketing-chooses-the-cover/</guid>
      <description>I saw this book a short while ago at Chapters (book store chain in Canada). What caught my eye was the humour on the front cover!
This book is on how to secure your PC using Computer Associates Internet Security software (with a Windows Vista update!). However, the laptop that the lady on the cover is using is a MacBook!
Currently, there are no known viruses or spyware for Macs!</description>
    </item>
    
    <item>
      <title>eMac family photo frame</title>
      <link>https://jasoneckert.github.io/myblog/emac-family-photo-frame/</link>
      <pubDate>Sun, 15 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/emac-family-photo-frame/</guid>
      <description>Sometimes, you just do things that bring out the geek within&amp;hellip;&amp;hellip;well&amp;hellip;&amp;hellip;today is one of those days. Guess what you can do with the front bezel of an Apple eMac? Make a family photo frame!
Simply find a piece of glass that is 14”x11” and place it on the inside of the bezel. Next, place your picture on the glass (preferably with a nice thick matting to add depth) and screw a 15”x12” piece of pressboard into the existing screw holes on the inside of the bezel and you will have a portrait that geeks will immediately notice when they enter your rec room.</description>
    </item>
    
    <item>
      <title>New Years security resolutions for 2006</title>
      <link>https://jasoneckert.github.io/myblog/new-years-security-resolutions-for-2006/</link>
      <pubDate>Sun, 01 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/new-years-security-resolutions-for-2006/</guid>
      <description>1. Don’t give personal information to obtain documents on the web Many sites want you to register to get a free document or certain web page. What do you think they use your information for? Spam, spam and more spam. If you want to get these documents without putting in your personal information, simply put the URL for the site in http://bugmenot.com and get past the registration!
2. Protect against Viruses Use Firefox - Many spyware/malware/viruses have code that targets Internet Explorer.</description>
    </item>
    
    <item>
      <title>4. Tech Flicks</title>
      <link>https://jasoneckert.github.io/info/techflicks/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/info/techflicks/</guid>
      <description>100 Yen: The Japanese Arcade Experience (2012)
2001: Space Odyssey (1968)
8 Bit Generation: The Commodore Wars (2016)
Antitrust (2001)
Blade Runner (1982)
Bright (2017)
Chasing Ghosts: Beyond the Arcade (2007)
Cloak and Dagger (1984)
Contact (1997)
Die Hard 4: Live Free or Die Hard (2007)
Every Star Wars and Star Trek movie (from the 1970s+)
Fanboys (2008)
Freedom Downtime (2001)
Funspot: A Small Documentary on the World&amp;rsquo;s Largest Video Game Arcade (2016)</description>
    </item>
    
    <item>
      <title>5. Tech Slogans</title>
      <link>https://jasoneckert.github.io/info/techslogans/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/info/techslogans/</guid>
      <description>Don&amp;rsquo;t Anthropomorphize computers. They hate that.
I void warranties
I read your email
Linux isn&amp;rsquo;t magic. It&amp;rsquo;s sudo-science.
Kids: Don&amp;rsquo;t try this at ~
Code poet
Byte Me
I see dead pixels
cd /pub; more beer No, I will not fix your computer
There is no place like 127.0.0.1
There is no place like ::1
Bow before me for I am root
Dilbert is NOT fiction
It must be user error</description>
    </item>
    
  </channel>
</rss>
