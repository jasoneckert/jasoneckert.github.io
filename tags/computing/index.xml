<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>computing on Welcome to My Site!</title>
    <link>https://jasoneckert.github.io/tags/computing/</link>
    <description>Recent content in computing on Welcome to My Site!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jasoneckert.github.io/tags/computing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes Quickstart</title>
      <link>https://jasoneckert.github.io/myblog/kubernetes-quickstart/</link>
      <pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/kubernetes-quickstart/</guid>
      <description>In the IT world, we&amp;rsquo;ve shifted from running servers bare metal to running them almost exclusively within virtual machines (VMs). More recently we&amp;rsquo;ve seen another shift to running servers within containers. Like VMs, containers are servers that contain a unique filesystem, IP stack and software. But unlike VMs, containers do not contain a full operating system or operating system kernel. Instead they rely on an underlying operating system that runs the container using a container runtime, such as Docker.</description>
    </item>
    
    <item>
      <title>Installing a fast Linux server on an M1-based Mac</title>
      <link>https://jasoneckert.github.io/myblog/installing-linux-server-on-mac-m1/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/installing-linux-server-on-mac-m1/</guid>
      <description>One of the biggest worries that IT users have regarding Apple&amp;rsquo;s new ARM-based M1 platform is the ability to run virtual machines (VMs) of other operating systems using hypervisor software. And while it&amp;rsquo;s possible to run virtual machines of both Windows and Linux operating systems made for the Intel platform on the M1, the performance cost of translating Intel instructions to ARM is high (even with the optimizations Apple has within their M1 CPU).</description>
    </item>
    
    <item>
      <title>ARM on the desktop is here to stay</title>
      <link>https://jasoneckert.github.io/myblog/arm-on-the-desktop/</link>
      <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/arm-on-the-desktop/</guid>
      <description>Back in the 1990s, Reduced Instruction Set Computing (RISC) architecture was widely seen as the future. UNIX workstations from Silicon Graphics and Sun Microsystems boasted powerful RISC CPUs at the time, but were prohibitively expensive and died out in the early 2000s as a result. Only the Acorn RISC Machine (ARM) architecture used in low-power devices (e.g. PDAs) survived past the early 2000s, and only because of the rise of mobile devices that relied on battery power.</description>
    </item>
    
    <item>
      <title>An overview of cloud buzz words</title>
      <link>https://jasoneckert.github.io/myblog/cloud-buzz-words/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/cloud-buzz-words/</guid>
      <description>As this Dilbert comic eloquently illustrates, there&amp;rsquo;s no shortage of cloud buzz words thrown around today. But as strange and complex as they may sound (even to seasoned developers and system administrators), they are not difficult to understand. In this blog post, I&amp;rsquo;ll walk through the different components and features of the cloud, explaining the associated buzz words along the way.
What is the cloud? Back in the early 1990s, when the US government sold off parts of their ARPAnet and NSFnet to private companies (later called Internet Service Providers, or ISPs) to create the public Internet, there wasn&amp;rsquo;t anything exciting about the Internet at all.</description>
    </item>
    
    <item>
      <title>Work-from-home is the new BlackBerry</title>
      <link>https://jasoneckert.github.io/myblog/work-from-home-is-the-new-blackberry/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/work-from-home-is-the-new-blackberry/</guid>
      <description>I vividly remember the first time I was issued a BlackBerry smartphone back in the 2000s for work. I&amp;rsquo;d read emails while in line at the Pita shop during lunch hour, formulating a plan and response before I returned to my desk to reply. For emails that required a quick response, I&amp;rsquo;d hammer out a response on the BlackBerry keyboard while in line. And having access to my Outlook calendar on the BlackBerry meant that I could view, schedule and prioritize my tasks anywhere.</description>
    </item>
    
    <item>
      <title>Copyleft is dying</title>
      <link>https://jasoneckert.github.io/myblog/copyleft-is-dying/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/copyleft-is-dying/</guid>
      <description>Software licensing is the catalyst that drives the modern tech industry. This is because reusable software code released under an open source license (permitting its reuse) is the norm for nearly all software development today. After all, if we couldn&amp;rsquo;t reuse existing code in new software projects, it would take far longer to bring technologies to market, and the overall software industry wouldn&amp;rsquo;t be able to evolve as quickly. Moreover, there are two major types of open source licenses.</description>
    </item>
    
    <item>
      <title>It&#39;s a great time to be a developer</title>
      <link>https://jasoneckert.github.io/myblog/it-is-a-great-time-to-be-a-developer/</link>
      <pubDate>Mon, 26 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/it-is-a-great-time-to-be-a-developer/</guid>
      <description>I&amp;rsquo;ve been a developer for over 3 decades. I remember prompt statements in dBASE III, M68k Assembly and those awful Borland tools. Documentation was provided in large printed binders and often left a lot to the imagination.
Things got better in the late 1990s and early 2000s, but it wasn&amp;rsquo;t until the late 2000s when things really started to heat up. Sun Microsystem&amp;rsquo;s early 1990s slogan &amp;ldquo;The network is the computer&amp;rdquo; became a reality with the rise of cloud computing, object storage and slick frontend/backend stacks.</description>
    </item>
    
    <item>
      <title>UNIX/Linux is now a core skill for anyone working in tech</title>
      <link>https://jasoneckert.github.io/myblog/linux-is-now-a-core-skill/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/linux-is-now-a-core-skill/</guid>
      <description>If you had asked me in the 1990s whether most people in the tech world would be using a UNIX or Linux shell to manage their servers, I would have chuckled and said &amp;ldquo;No.&amp;rdquo; But two decades later we find ourselves in a world where 96% of the cloud is comprised of Linux servers running Web apps made with open source frameworks, and the majority of software development is done on UNIX (macOS) or Linux workstations.</description>
    </item>
    
    <item>
      <title>Cybersecurity in a Nutshell</title>
      <link>https://jasoneckert.github.io/myblog/cybersecurity-in-a-nutshell/</link>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/cybersecurity-in-a-nutshell/</guid>
      <description>Simply put, Cybersecurity is an umbrella term that encompasses all aspects of computer, network and data security. While Cybersecurity-specific job roles are commonplace in larger organizations, smaller organizations often require that existing IT roles perform Cybersecurity-specific tasks. And since Cybersecurity is only going to grow in importance over time, anyone working in IT should have a solid knowledge of it.
So what does Cybersecurity involve? You can divide cybersecurity into four main areas today:</description>
    </item>
    
    <item>
      <title>The future looks a lot like mainframe computing</title>
      <link>https://jasoneckert.github.io/myblog/mainframe-computing-is-the-future/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/mainframe-computing-is-the-future/</guid>
      <description>Mainframe computers, like the IBM one shown above, were the first digital computers that started appearing in big companies during the 1950s. They were room-sized behemoths of circuitry and steel primarily used to generate balance sheets and income statements. And while IBM still sells a small number of mainframe computers today, they only enjoyed mainstream popularity until the late 1980s.
While early mainframes were only accessed by the people who managed it, most mainframes of the 1970s and 1980s ran programs that were accessed by remote users via a dumb terminal.</description>
    </item>
    
    <item>
      <title>Relating Silicon Valley to the Toronto-Waterloo Corridor</title>
      <link>https://jasoneckert.github.io/myblog/silicon-valley-toronto-waterloo/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/silicon-valley-toronto-waterloo/</guid>
      <description>Silicon Valley is an HBO comedy series that aired from 2014-2019. It follows a group of software engineers as they journey from creating their own apps in a home-based tech incubator in California&amp;rsquo;s Silicon Valley to creating a new decentralized Internet in their own venture capital-funded tech company.
From the beginning, its creators (Mike Judge and Alec Berg) aimed to make the series an entertaining and accurate depiction of Silicon Valley tech culture, icons and events.</description>
    </item>
    
    <item>
      <title>Mastering the Zen of TrackPoint</title>
      <link>https://jasoneckert.github.io/myblog/mastering-the-zen-of-trackpoint/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/mastering-the-zen-of-trackpoint/</guid>
      <description>Lenovo (formerly IBM) ThinkPad laptops are widely known for three things:
 An amazing keyboard (often touted as the best for professional work) Rugged build quality (it&amp;rsquo;s hard to kill a Thinkpad: https://youtu.be/OMilj81s9SI) The TrackPoint, which has been standard on ThinkPads since the first model in 1992  What is a TrackPoint? Simply put, it is an alternative to using a mouse or trackpad on laptops. To ensure that your index fingers can easily reach it, it&amp;rsquo;s situated in the middle of the keyboard between the G, H and B keys.</description>
    </item>
    
    <item>
      <title>The computer that saved Apple</title>
      <link>https://jasoneckert.github.io/myblog/the-computer-that-saved-apple/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-computer-that-saved-apple/</guid>
      <description>The very first iMac model (shown above) was released in 1998, came in one colour called Bondi Blue, and had a semi-translucent case that allowed you to see the components inside. It had a 233MHz PowerPC G3 CPU, 32MB of RAM, CD-ROM drive, and shipped with MacOS 8.1 (soon upgraded to MacOS 9 - the last version before Apple moved to Mac OS X).
While passing by a convenience store in my home town of Hespeler, I muttered in distaste when I noticed that someone had dumped a lot of furniture and various other household items next to the already-full dumpster at the back.</description>
    </item>
    
    <item>
      <title>An introduction to WireGuard VPN</title>
      <link>https://jasoneckert.github.io/myblog/an-introduction-to-wireguard-vpn/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/an-introduction-to-wireguard-vpn/</guid>
      <description>1. Why WireGuard? When it comes to encrypting traffic between systems, there are a wide variety of different Virtual Private Network (VPN) software available, some of which have been used since the 1990s. Each of them focus on different encryption algorithms and flow control strategies, alongside mechanisms for providing for secure authentication and negotiating encryption keys. Unfortunately, this complexity often translates to more problems, slower traffic, as well fewer use cases and supported operating systems.</description>
    </item>
    
    <item>
      <title>2020 in review</title>
      <link>https://jasoneckert.github.io/myblog/2020-in-review/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2020-in-review/</guid>
      <description>I know what you&amp;rsquo;re thinking - 2020 sucked! Worst year ever! The COVID-19 pandemic, no social gatherings, no dine-in restaurants, no gyms, the US Trumpster fire, and most importantly to those of us in the tech world: Red Hat terminating CentOS development.
Of course, most people will remember 2020 for the pandemic, and that&amp;rsquo;s completely understandable. None of us have experienced a pandemic in our lifetime, and both our society and economy were not prepared to deal with it gracefully.</description>
    </item>
    
    <item>
      <title>Seldom discussed tips for working in the tech industry</title>
      <link>https://jasoneckert.github.io/myblog/seldom-discussed-tech-industry-tips/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/seldom-discussed-tech-industry-tips/</guid>
      <description>There are plenty of blog posts on the Web that give sage advice for anyone working in the tech industry. However, most of them focus on the same topics: time management, resourcefulness, continuous learning, verbal and written communication skills, caffeine consumption, and so on.
In this blog post, I&amp;rsquo;ll discuss 6 tech industry tips that are rarely discussed online, but that are equally (if not more) important from my experience over the past three decades in this industry.</description>
    </item>
    
    <item>
      <title>5 Z shell features that will encourage you to switch from Bash</title>
      <link>https://jasoneckert.github.io/myblog/moving-from-bash-to-zsh/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/moving-from-bash-to-zsh/</guid>
      <description>The command line interface on your system is provided by a shell. And while there are dozens of different shells available to choose from, nearly every UNIX and Linux system over the past two decades has used the feature-rich Bash shell as the default login shell.
Although the Bash shell still remains the most common login shell used on UNIX and Linux systems, macOS and a few Linux distributions (e.g. Kali) have switched their default shell to the Z shell (zsh), and this trend is likely to continue.</description>
    </item>
    
    <item>
      <title>Why I love teaching online</title>
      <link>https://jasoneckert.github.io/myblog/why-i-love-teaching-online/</link>
      <pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/why-i-love-teaching-online/</guid>
      <description>When the pandemic hit earlier this year, schools around the globe quickly embraced online teaching to continue their curriculum. While online teaching wasn&amp;rsquo;t entirely new in this space, it certainly wasn&amp;rsquo;t the norm. This meant that many teachers had to adapt quickly, as these 2 funny videos illustrate:
 https://www.youtube.com/watch?v=CCe5PaeAeew https://www.youtube.com/watch?v=Zy_y9yOrgxk  However, I&amp;rsquo;ve loved every part of this transition because I absolutely love teaching tech courses online.
Grant you, I&amp;rsquo;ve had some practice prior to 2020, as well as a general interest in how the Web could be used for education.</description>
    </item>
    
    <item>
      <title>A brief history of technology</title>
      <link>https://jasoneckert.github.io/myblog/a-brief-history-of-technology/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/a-brief-history-of-technology/</guid>
      <description>Technology is a crazy ride, and like that lyric in the Talking Heads song Once in a Lifetime, &amp;ldquo;&amp;hellip;you may ask yourself, well, how did I get here?&amp;rdquo;
If that&amp;rsquo;s the case, you&amp;rsquo;re in luck, because this post is a no-nonsense, give-me-the-big-picture timeline of what the heck happened in the technology landscape these past 50 years. Of course, not every little detail is in there. Just those that are actually important (in my expert opinion, of course ;-) Enjoy!</description>
    </item>
    
    <item>
      <title>Cybersecurity in the early 1990&#39;s</title>
      <link>https://jasoneckert.github.io/myblog/cybersecurity-in-the-90s/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/cybersecurity-in-the-90s/</guid>
      <description>Back in the late 1980&amp;rsquo;s and early 1990&amp;rsquo;s, I remember collecting MS-DOS computer viruses. I’d download them from an online Bulletin Board System (BBS) and store them on floppy disks in compressed format to prevent them from executing. For fun, some friends and I would occasionally release them on one of our systems to see what they did, and then reinstall MS-DOS afterwards. Most viruses didn’t do very much, but some others (e.</description>
    </item>
    
    <item>
      <title>Most people don&#39;t want a computer</title>
      <link>https://jasoneckert.github.io/myblog/most-people-dont-want-a-computer/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/most-people-dont-want-a-computer/</guid>
      <description>In the past few decades, people of all ages across North America have become technology-literate in some way or another. Many of them weren&amp;rsquo;t introduced to technology via desktop or laptop computers, but instead through a smartphone or tablet. Similarly, many desktop and laptop users have switched to using their smartphone or tablet over the past decade to interact with the online world.
After all, smartphones and tablets are incredibly easy to use.</description>
    </item>
    
    <item>
      <title>Open does not always mean Open Source</title>
      <link>https://jasoneckert.github.io/myblog/open-does-not-always-mean-open-source/</link>
      <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/open-does-not-always-mean-open-source/</guid>
      <description>In the technology world today, the term Open is most commonly associated with Open Source.
Open Source refers to software released under a license that gives other software developers access to modify the original Source code that was used to create the software. This, in turn allows other software developers worldwide to quickly identify and fix bugs and security loopholes, as well as make feature improvements to the software. Consequently, Open Source software evolves more rapidly than other (Closed Source) software, and is considered the gold standard for software today.</description>
    </item>
    
    <item>
      <title>Tracing difficult shell scripts</title>
      <link>https://jasoneckert.github.io/myblog/tracing-difficult-shell-scripts/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/tracing-difficult-shell-scripts/</guid>
      <description>Whether you&amp;rsquo;re an IT systems administrator, developer or devop working with Linux/UNIX shell scripts, you&amp;rsquo;re likely going to come across some that are not well documented and difficult to trace (read and understand) as a result.
While these scripts discourage others from tracing them, you can easily trace even the most difficult shell scripts if you follow good tracing procedures. Moreover, by tracing a difficult shell script, you build your knowledge of specific Linux/UNIX components, as well as scripting in general.</description>
    </item>
    
    <item>
      <title>Fundamental computer science concepts every software developer should know</title>
      <link>https://jasoneckert.github.io/myblog/fundamental-comp-sci/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/fundamental-comp-sci/</guid>
      <description>To be a software developer (a.k.a. programmer or software engineer) today, you don&amp;rsquo;t need a degree in computer science. In fact, computer science really isn&amp;rsquo;t about &amp;ldquo;how&amp;rdquo; you develop software today at all. It&amp;rsquo;s about how we approach software problems theoretically. And to be frank, you don&amp;rsquo;t need to worry about computer science theory to be a good software developer today. You just need to know how to solve problems using code, be good at using existing software frameworks, as well as know how to Google stuff and read programming language documentation.</description>
    </item>
    
    <item>
      <title>2019 in review</title>
      <link>https://jasoneckert.github.io/myblog/2019-in-review/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2019-in-review/</guid>
      <description>This year was flat-out awesome! I can’t think of many years in the past decade that had the same amount of academic, physical, and personal fulfillment all in one year!
On the academic side, I presented a 12-week Linux+ webinar series at night to IT instructors worldwide for the Computing Technology Industry Association (CompTIA) Instructor Network.
This, of course, fit well since I just finished writing the 5th edition of my Linux textbook for Cengage (Linux+ &amp;amp; LPIC Guide to Linux Certification).</description>
    </item>
    
    <item>
      <title>Reviving an ancient BSD UNIX workstation</title>
      <link>https://jasoneckert.github.io/myblog/reviving-an-ancient-bsd-workstation/</link>
      <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/reviving-an-ancient-bsd-workstation/</guid>
      <description>Most people will look at this 3-foot-long behemoth of ancient electronics and wonder why it wasn’t scrapped decades ago. But for many of us in the tech industry, these ancient machines are a way to peer into the early days of an industry that has twisted and evolved in leaps and bounds, leaving nearly every player that shaped its landscape forgotten in time.
The machine sitting in my driveway at the top of this post is a workstation from the early 1980s with a NS32016 CPU (the first 32-bit general purpose microprocessor) and a whopping 1MB of RAM.</description>
    </item>
    
    <item>
      <title>Why you should use technology less</title>
      <link>https://jasoneckert.github.io/myblog/why-you-should-use-technology-less/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/why-you-should-use-technology-less/</guid>
      <description>Over the past few years, I’ve taken to using technology less and less in my daily life.
 I leave my phone in the car when going to a party or social event. I’ll only fetch it if I want to take a picture, and only after appreciating the moment I’d like to capture to the fullest. When I listen to music on my phone (via headphones) during the long walks I take to get exercise and relax, I don’t check my phone at all.</description>
    </item>
    
    <item>
      <title>The UNIX Philosophy in 2019</title>
      <link>https://jasoneckert.github.io/myblog/the-unix-philosophy-in-2019/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-unix-philosophy-in-2019/</guid>
      <description>Earlier this week, I did a presentation for WWITPRO that detailed the UNIX philosophy and its relevance today. Given the subject matter, I decided to do the presentation in PostScript on my SPARCbook running Sun Solaris 2.5.1. This blog post details the content of the presentation for posterity!
What is UNIX? Simply put, UNIX is an operating system that was created by Ken Thompson in 1969 that was rewritten shortly thereafter in Dennis Ritchie’s C programming language.</description>
    </item>
    
    <item>
      <title>How ricing shifted from cars to computers</title>
      <link>https://jasoneckert.github.io/myblog/how-ricing-shifted-from-cars-to-computers/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/how-ricing-shifted-from-cars-to-computers/</guid>
      <description>Back in the early 1990s, teenagers with a drivers license made a hobby of tweaking out their cars - adding custom grills, spoilers, paint jobs, and so on. The more crazy, the better. And since the most common car to perform these modifications on were older Honda Civics, which you could get fairly cheap at the time, especially if they were more than 5 years old and needed a bit of work.</description>
    </item>
    
    <item>
      <title>SPARCbook 3000ST: The coolest 90s laptop</title>
      <link>https://jasoneckert.github.io/myblog/sparcbook3000st-the-coolest-90s-laptop/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/sparcbook3000st-the-coolest-90s-laptop/</guid>
      <description>A few weeks back I managed to pick up an incredibly rare laptop in immaculate condition for $50 on Kijiji: a Tadpole Technologies SPARCbook 3000ST from 1997 (it also came with two other working Pentium laptops from the 1990s).
I had to drive almost three hours to pick it up on the other side of Toronto, but for a SPARCbook it was definitely worth it seeing as I&amp;rsquo;m more likely to find the lost city of Atlantis than another one of these again.</description>
    </item>
    
    <item>
      <title>Pop!_OS: The first real Linux desktop</title>
      <link>https://jasoneckert.github.io/myblog/popos-the-first-real-linux-desktop/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/popos-the-first-real-linux-desktop/</guid>
      <description>Tonight I gave a presentation at the Kitchener-Waterloo Linux User’s Group (KWLUG) about Pop!_OS, and this blog post is essentially a summary of that talk. The Linux development community has never really spent a lot of time making Linux for the desktop - the focus has been on servers and customizability (e.g. embedded systems, mobile, IoT, etc.). There are plenty of desktop-focused Linux distributions such as Linux Mint and ElementaryOS that have positioned themselves as such.</description>
    </item>
    
    <item>
      <title>2018 in review</title>
      <link>https://jasoneckert.github.io/myblog/2018-in-review/</link>
      <pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2018-in-review/</guid>
      <description>At the end of each year, I take some time to reflect on the previous year - it provides perspective, and is a lot of fun!
For me, 2018 was the year I spent a lot of time improving myself physically, challenging myself mentally, and most importantly, enjoying life!
On the personal side, I cut out the bad foods from my diet:
 breads starches alcohol  On top of this, I upped my indoor and outdoor exercise to lose a whopping 85 pounds since mid 2017 - I feel great, have loads of energy, and no longer have any back pain whatsoever!</description>
    </item>
    
    <item>
      <title>SSH Foo</title>
      <link>https://jasoneckert.github.io/myblog/ssh-foo/</link>
      <pubDate>Sun, 09 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/ssh-foo/</guid>
      <description>Last week, I gave a presentation at a local LUG (which is a Linux User’s Group, for anyone who hasn’t heard of those before) on the subject of SSH Foo.
In UNIX circles, we refer to tricks of the trade as “Kung Fu” or just “Fu” (which sounds rude), so it is spelled “Foo” ;-)
In this blog post, I’ll summarize my SSH Foo talk! Be aware that this is not an introduction to SSH, but a more advanced look at some interesting SSH features for those who are already comfortable with it.</description>
    </item>
    
    <item>
      <title>Three reasons why incubators breed failure</title>
      <link>https://jasoneckert.github.io/myblog/three-reasons-why-incubators-breed-failure/</link>
      <pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/three-reasons-why-incubators-breed-failure/</guid>
      <description>These past few years, I’ve provided various types of support for some tech incubators in the Kitchener-Waterloo region where I live (it’s a complex arrangement that I won’t go into within this post, but mostly involves helping people with technology implementation issues related to software). It’s not hard to find tech incubators nowadays - they’ve become quite popular this past decade, and larger cities often have several incubators of various sizes.</description>
    </item>
    
    <item>
      <title>How the cloud grew up around Linux</title>
      <link>https://jasoneckert.github.io/myblog/how-the-cloud-grew-up-around-linux/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/how-the-cloud-grew-up-around-linux/</guid>
      <description>Open source software has had a powerful effect on computing. When the ARPANET/NSFNET was sold to different companies in the 1990s to create the commercial Internet, nobody expected it to grow as fast as it did. It was the open source Apache Web server running on the open source Linux (and BSD UNIX) operating system that ultimately allowed the Internet to grow quickly and attract the attention of the world. Apache on Linux allowed anyone with a computer and Internet connection to implement a Web server to serve Web pages as part of the World Wide Web of Internet resources.</description>
    </item>
    
    <item>
      <title>A simple guide to git</title>
      <link>https://jasoneckert.github.io/myblog/a-simple-guide-to-git/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/a-simple-guide-to-git/</guid>
      <description>Simply put, Git is a version control system that can be used to keep track of the changes that you make to files over time - it allows you to revert files to a previous state, or see who made changes to a file at different times if several people are working the those files collaboratively.
Git was original developed back in 2005 by Linus Torvalds (the creator of Linux) to aid in making changes to the Linux kernel, but has since become the most common open source version control system used today.</description>
    </item>
    
    <item>
      <title>Devops Demystified</title>
      <link>https://jasoneckert.github.io/myblog/devops-demystified/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/devops-demystified/</guid>
      <description>Last week, my friend Scott Elliott did a great guest presentation at the college where he talked about, amongst other things, devops. Moreover, I’ve been involved myself in the setup and configuration of two software development workflows (which technically makes me a devop); one was in 2017 for a tech startup in Kitchener, and the other one was earlier this year for a much larger project at the University of Waterloo.</description>
    </item>
    
    <item>
      <title>Blockchain for IT pros</title>
      <link>https://jasoneckert.github.io/myblog/blockchain-for-it-pros/</link>
      <pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/blockchain-for-it-pros/</guid>
      <description>IT professionals are often asked to describe technologies to others within their organization, and this includes buzz words they may have heard in some tech article or trade magazine:
There’s definitely no shortage of these buzz words in the tech industry - “the cloud,” “the Web 2.0,” “XaaS,” “CyberSecurity,” and of course “bitcoin” and “blockchain” are layered as thick as possible within articles and blogs to bolster clicks, likes and shares.</description>
    </item>
    
    <item>
      <title>Halt and Catch Fire</title>
      <link>https://jasoneckert.github.io/myblog/halt-and-catch-fire/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/halt-and-catch-fire/</guid>
      <description>Halt and Catch Fire is an AMC television series that ran for four seasons from 2014-2017, and covers the culture and pivotal aspects of the computing industry from 1983 (just after the release of the IBM PC) to 1994 (when the Internet and World Wide Web exploded).
You can binge watch it on Netflix if you like today, and trust me - you won’t be disappointed! Halt and Catch Fire is the best drama I’ve ever seen - an emotional rollercoaster like no other.</description>
    </item>
    
    <item>
      <title>Lessons I&#39;ve learned from teaching 20 years of IT</title>
      <link>https://jasoneckert.github.io/myblog/20-years-of-teaching-lessons-learned/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/20-years-of-teaching-lessons-learned/</guid>
      <description>I actually started teaching on April 13th 1998 (20 years ago today).
It was my final year as a student at the University of Waterloo, and as I was finishing up writing my final exams I realized that I needed to actually go out and get a real job to support my family (I was married with a daughter at the time).
Prior to that, I had worked on some very cool technology projects for various companies (including some big names like Microsoft, DEC and SUN), as well as worked for the University as a Web developer and sysadmin.</description>
    </item>
    
    <item>
      <title>Ultimate UNIX timeline</title>
      <link>https://jasoneckert.github.io/myblog/ultimate-unix-timeline/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/ultimate-unix-timeline/</guid>
      <description>One thing that has always annoyed me about the Internet surrounds the history and evolution of UNIX-based operating systems. If you Google “UNIX timeline”, you’ll get a bunch of different results that are either incomplete, incorrect, complicated to the point where it’s unreadable, or a combination of all of these things.
So this blog post aims to rectify this!
Here are some important things to note about UNIX in general and each of the UNIX flavours depicted on this timeline:</description>
    </item>
    
    <item>
      <title>RIP PowerBook</title>
      <link>https://jasoneckert.github.io/myblog/rip-powerbook/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/rip-powerbook/</guid>
      <description>I took the picture at the top of this post sitting in Starbucks recently with my trusty, 12-year-old PowerBook G4 laptop from Apple. Those sitting around me have no idea how ancient my laptop is - they probably see the glow from the Apple logo on the back and realize that it’s just another Apple laptop.
But it’s more than just another laptop to me. It’s written over a dozen textbooks for various publishers, created countless curriculum documents for my college, and given well over a hundred presentations.</description>
    </item>
    
    <item>
      <title>The history of IT certification</title>
      <link>https://jasoneckert.github.io/myblog/history-of-it-certification/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/history-of-it-certification/</guid>
      <description>Nearly everyone working in an Information Technology (IT) field has at least one IT-related certification. This is because IT certification is commonly used as a skills benchmark for hiring and promotion, and it’s been that way for a long, long time.
So where did all this certification stuff start? If you look online, there isn’t even a Wikipedia page that can give you that answer - like many things in the technology world that predated the Internet, it just wasn’t important enough to keep track of in the Internet Age that started in the 1990s.</description>
    </item>
    
    <item>
      <title>2017 in review</title>
      <link>https://jasoneckert.github.io/myblog/2017-in-review/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2017-in-review/</guid>
      <description>So what happened in 2017?
Last year I thought I completed my basement arcade by getting Donkey Kong (see my blog post entitled &amp;ldquo;2016 in review&amp;rdquo;), but I was wrong! I actually got two new arcade games this year. The first one was an arcade machine I never thought I’d find in good working condition. It’s also the absolute coolest arcade game of the 1980s with its amazing vector graphics (as well as my all-time favourite arcade game)&amp;hellip;&amp;hellip;.</description>
    </item>
    
    <item>
      <title>RIP Solaris</title>
      <link>https://jasoneckert.github.io/myblog/rip-solaris/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/rip-solaris/</guid>
      <description>The 80s and 90s was a period of intense development in the computer hardware and software worlds. On the hardware side, processors started to become much more powerful, and the word on the streets was that RISC (Reduced Instruction Set Computing) was going to be the way of the future. Powerful RISC platforms emerged during this time, including Sun Microsystems SPARC, HP PA-RISC, SGI MIPS, IBM PowerPC, and the DEC Alpha - these platforms were very powerful, and ushered in 64-bit computing over a decade before it became common in home computers.</description>
    </item>
    
    <item>
      <title>Get ready for the chip wars!</title>
      <link>https://jasoneckert.github.io/myblog/get-ready-for-the-chip-wars/</link>
      <pubDate>Sat, 22 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/get-ready-for-the-chip-wars/</guid>
      <description>Intel and their x86 computing architecture have pretty much dominated the computing industry since the late 1980s. In other words, nearly all computers that you’ve used at work or home for the past three decades have used Intel’s proprietary x86 (and later, x64) CPUs. The Intel 80-386 running DOS and Win3.1 won the PC wars by the early 1990s. Then came the Intel 80-486, Pentium, Pentium II, Pentium III, Pentium IV, Core Duos, Core i7s, as well as the AMD equivalents that ran the same x86/x64 instruction sets.</description>
    </item>
    
    <item>
      <title>50 shades of Cray</title>
      <link>https://jasoneckert.github.io/myblog/50-shades-of-cray/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/50-shades-of-cray/</guid>
      <description>If you wanted a fast computer back in 1976, you bought the 5.5 ton, $9 million Cray-1 made by Cray Research. The Cray-1 was dubbed the first supercomputer as it was designed to be much faster than other (more massive) computers of the time.
It was incredibly successful in the large computing space and Cray subsequently released a much faster model called the Cray X-MP in 1983 (shown in the picture at the top of this post).</description>
    </item>
    
    <item>
      <title>2016 in review</title>
      <link>https://jasoneckert.github.io/myblog/2016-in-review/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2016-in-review/</guid>
      <description>For the past years, I’ve done a “year in review” blog post, and of course this one is for 2016! It’s a great way to reflect on the events that have happened during the year, and to honest, is actually a lot of fun!
Just a quick disclaimer: I have no intention of talking about the shallow-but-popular celebrity death fixation that has taken over the Internet (must be a millennial thing).</description>
    </item>
    
    <item>
      <title>An evening with The Woz</title>
      <link>https://jasoneckert.github.io/myblog/an-evening-with-the-woz/</link>
      <pubDate>Thu, 29 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/an-evening-with-the-woz/</guid>
      <description>I specifically attended yesterday’s Fuzenation Technology &amp;amp; Music Summit in Kitchener, Ontario to hear Steve Wozniak (a.k.a. The Woz) speak.
In short, he’s the co-founder of Apple, and the engineer who created the Apple I and Apple II computers. The Apple II was the first successful, mass-produced personal computer, and as the Woz points out, the “first one that could play arcade games in full colour” (I still have an Apple II that I use to play arcade games like Donkey Kong).</description>
    </item>
    
    <item>
      <title>The Linux operating system turns 25 years old today</title>
      <link>https://jasoneckert.github.io/myblog/linux-turns-25/</link>
      <pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/linux-turns-25/</guid>
      <description>Today marks the 25th anniversary of the Linux operating system!
More specifically, it marks the day that Linus Torvalds announced his new operating system (that was later called Linux) in a newsgroup post:
From:torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds) Newsgroup: comp.os.minix Subject: What would you like to see most in minix? Summary: small poll for my new operating system Message-ID: 1991Aug25, 20578.9541@klaava.Helsinki.FI Date: 25 Aug 91 20:57:08 GMT Organization: University of Helsinki. Hello everybody out there using minix- I&#39;m doing a (free) operating system (just a hobby, won&#39;t be big and professional like gnu) for 386(486) AT clones.</description>
    </item>
    
    <item>
      <title>The World Wide Web turns 25 years old today</title>
      <link>https://jasoneckert.github.io/myblog/www-turns-25/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/www-turns-25/</guid>
      <description>On August 6, 1991, Tim Berners-Lee created a post detailing his World Wide Web project on a newsgroup called alt.hypertext in order to entice others to collaborate with him and create and host Web pages for the World Wide Web. However, it wasn’t until August 23, 1991 that it was made publicly accessible for the world to see. You could argue that August 6 is the real birth of the World Wide Web, but most websites and news aggregators acknowledge August 23 as the true birth of the World Wide Web, including Facebook, which included it as a news item today for everyone!</description>
    </item>
    
    <item>
      <title>The dawn of personal computing</title>
      <link>https://jasoneckert.github.io/myblog/dawn-of-personal-computing/</link>
      <pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/dawn-of-personal-computing/</guid>
      <description>If you know me, or have read various sections of my website, you’ll know that I am a die hard member of the computing industry that also likes to collect vintage computers (this is actually quite common - you’d be surprised how many of my colleagues do the same).
Yesterday, I managed to find a very interesting canvas painting in Toronto (the picture at the top of this post), and just HAD to have it.</description>
    </item>
    
    <item>
      <title>Some NeXT level stuff</title>
      <link>https://jasoneckert.github.io/myblog/some-next-level-stuff/</link>
      <pubDate>Fri, 29 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/some-next-level-stuff/</guid>
      <description>1. What is NeXT? (pun intended) NeXT was the computer company that Steve Jobs (co-founder of Apple) created after he got kicked out of Apple in the 1980s. They made high-end UNIX workstations that were intended to rival Apple computers, and primarily targeted for the higher education and science/engineering markets. However, they were not as successful as their competitors in this market and when Steve Jobs returned to Apple in 1997, he ensured that Apple purchased NeXT.</description>
    </item>
    
    <item>
      <title>PowerShell Essentials for SysAdmins</title>
      <link>https://jasoneckert.github.io/myblog/powershell-essentials-for-sysadmins/</link>
      <pubDate>Sun, 06 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/powershell-essentials-for-sysadmins/</guid>
      <description>PowerShell is essentially a scripting language and shell (command prompt) that you can use on Windows systems. It’s basically Microsoft’s way of getting a powerful UNIX/Linux/Mac-like shell on the Windows platform (long overdue!). The first versions of PowerShell were pretty horrific, but it’s come a long way since then. PowerShell v4 and later is pretty decent (Win10 comes with PowerShell v5). Luckily, PowerShell v4 comes with Windows Server 2012, and since this post is geared towards sysadmins, I’ll focus everything on Windows Server 2012.</description>
    </item>
    
    <item>
      <title>2015 in review</title>
      <link>https://jasoneckert.github.io/myblog/2015-in-review/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2015-in-review/</guid>
      <description>2015 was an interesting year, and one that I really enjoyed!
I spent a lot of time getting/restoring/playing the last few arcade machines that I’ve wanted in my arcade collection - I just love the retro arcade hobby! As a result, I won’t be getting or restoring any more in 2016 at all (I have a few arcades that I want to work on to upgrade, but that’s about it). I’ll be spending most of my time playing them!</description>
    </item>
    
    <item>
      <title>World of Commodore conference</title>
      <link>https://jasoneckert.github.io/myblog/world-of-commodore-conference/</link>
      <pubDate>Sat, 05 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/world-of-commodore-conference/</guid>
      <description>This is the first year that I’ve been to the World of Commodore event in Mississauga, Ontario. It&amp;rsquo;s a yearly gathering of Commodorks who create new software and hardware for vintage Commodore computers. I had no idea that it even existed until someone I knew told me about it. Since it’s relatively close to me, I just had to go. Plus, I have many Commodore computers in my vintage computer collection.</description>
    </item>
    
    <item>
      <title>Breathe new life into an old PowerBook G4 using Linux</title>
      <link>https://jasoneckert.github.io/myblog/breathe-new-life-into-an-old-powerbook-g4-with-linux/</link>
      <pubDate>Mon, 02 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/breathe-new-life-into-an-old-powerbook-g4-with-linux/</guid>
      <description>So what do you do when you have an old PowerBook that still works but can’t run the latest operating system (OS) and software? Well, you could sell it - but it won&amp;rsquo;t fetch much at all (less than $50 in most cases).
A better option is to install a currently-supported OS that runs really well on limited hardware&amp;hellip;&amp;hellip;.in other words, install Linux on it!
I recently installed the latest version of Debian Linux on my PowerBook G4 to make it useful again.</description>
    </item>
    
    <item>
      <title>2014 in review</title>
      <link>https://jasoneckert.github.io/myblog/2014-in-review/</link>
      <pubDate>Tue, 30 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/2014-in-review/</guid>
      <description>I think it’s always a good idea each year to reflect on the events that happened during the year - it’s a great way to remember some of the great things that have happened, as well as put some of the not-so-great things that have happened in perspective. If you regularly post to social media (e.g. Facebook or Twitter), looking back on your posts are a great way to revisit the major events that took place during the year.</description>
    </item>
    
    <item>
      <title>The fastest computer I have ever owned!</title>
      <link>https://jasoneckert.github.io/myblog/the-fastest-computer-i-have-ever-owned/</link>
      <pubDate>Fri, 31 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-fastest-computer-i-have-ever-owned/</guid>
      <description>I know it’s been a while since I’ve blogged last&amp;hellip;.I’ve just been incredibly busy. This past month, I’ve been teaching a video game class at the college, writing the 4th edition of my Linux+ book for Cengage on an accelerated schedule, and managing four technology faculties&amp;hellip;&amp;hellip;all at the same time!
But today, I got a new computer: A Mac Pro (the higher end 6-core Xeon model with dual AMD FirePro D500s).</description>
    </item>
    
    <item>
      <title>The evolution of BYOD</title>
      <link>https://jasoneckert.github.io/myblog/the-evolution-of-byod/</link>
      <pubDate>Mon, 09 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-evolution-of-byod/</guid>
      <description>In the 1980s, email remained a luxury for a small number of larger organizations and universities. Mobile email did not exist. Instead, pagers and cellular telephones were the primary tools for mobile communication. However, in the early 1990s, email rose to prominence with the commercialization of the Internet. Although early smartphones did exist at this time (e.g. IBM’s Simon), email was not considered a mobile technology.
But by the mid 1990s, the computing landscape had exploded.</description>
    </item>
    
    <item>
      <title>Microsoft ReFS vs Oracle ZFS - FIGHT!</title>
      <link>https://jasoneckert.github.io/myblog/refs-vs-zfs-fight/</link>
      <pubDate>Tue, 25 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/refs-vs-zfs-fight/</guid>
      <description>In the past, most IT admins have put their faith in systems and SANs (Storage Area Networks) that use RAID (Redundant Array of Inexpensive Disks) technology. RAID can be used to combine hard disks together into simple volumes (called RAID-0, or JBOD) that aren’t fault tolerant, but can also be used to create mirrored volumes where both drives are identical in case one fails (called RAID-1), or striped volumes with parity where data is written across several disks with parity information that can be used to calculate the missing data if a drive fails (called RAID-5).</description>
    </item>
    
    <item>
      <title>The evolution of Information Technology</title>
      <link>https://jasoneckert.github.io/myblog/evolution-of-info-tech/</link>
      <pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/evolution-of-info-tech/</guid>
      <description>As a Dean for the technology faculties of a private college in Canada, I’m always looking to make our programs more aligned to the industry - my motto is: always look forward and never look back!
However, when it comes to Information Technology (IT), I regularly find that the general perception of IT jobs is stuck in the past by at least a decade. I can’t tell you how many times I’ve met people who think that IT guys are stuck in the back closet of some company doing some menial job, such as re-soldering chips on a computer motherboard much like working on the engine of an old car.</description>
    </item>
    
    <item>
      <title>Arcade game CPUs</title>
      <link>https://jasoneckert.github.io/myblog/arcade-game-cpus/</link>
      <pubDate>Sun, 02 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/arcade-game-cpus/</guid>
      <description>I’ve been getting into arcade games pretty heavily this year, and my posts have reflected this for sure ;-) Today’s post is actually a request from John Spitz, who emailed me after reading some of my other video game posts - he wanted to know if there was a typical progression in the types of hardware used in arcade games over the years.
The short answer is “yes” as you can see in the diagram I made at the top of this post.</description>
    </item>
    
    <item>
      <title>Hard drives are dead</title>
      <link>https://jasoneckert.github.io/myblog/hard-drives-are-dead/</link>
      <pubDate>Sat, 10 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/hard-drives-are-dead/</guid>
      <description>That may seem like a bold statement. And it is. However, Apple said the same thing about the floppy in 1997 when they introduced the iMac without it, and it slowly disappeared afterwards. ZDnet said the same thing about optical media (CDs/DVDs) in 2009 when USB flash drives reached critical mass - and of course optical media is slowly disappearing as we speak (the DVD drive in my Alienware laptop died shortly after I got it, but I never called Dell to replace it because I never use it anyways).</description>
    </item>
    
    <item>
      <title>The transputer</title>
      <link>https://jasoneckert.github.io/myblog/the-transputer/</link>
      <pubDate>Thu, 17 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-transputer/</guid>
      <description>So what the heck is a transputer? Well, it is a RISC CPU design from a company in England called INMOS that was designed so that it could interface with other CPUs of the same type in a massively parallel fashion (like a mini supercomputer).
The reason it was made was because CISC CPU designs of the 1980s were getting too bulky and people thought that it would be hard to advance them (of course they were wrong - never doubt engineers!</description>
    </item>
    
    <item>
      <title>NeXTSTEP is cool</title>
      <link>https://jasoneckert.github.io/myblog/nextstep-is-cool/</link>
      <pubDate>Mon, 16 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/nextstep-is-cool/</guid>
      <description>When Steve Jobs left Apple in the 1980s, he started a new venture that produced NeXT UNIX computers that ran a custom UNIX system called NeXTSTEP on Motorola 68000-series computers. The first Web browser was made my Tim Berners-Lee on one of these NeXT computers!
When I was an undergrad student at the University of Waterloo, we had a few NeXT computers (literally two of them I believe) and a bunch of HP PA-RISC 712s running NeXTSTEP for object-oriented software development (it was more common to see Sun or SGI UNIX systems at the university back them).</description>
    </item>
    
    <item>
      <title>The famous Pentium FDIV bug</title>
      <link>https://jasoneckert.github.io/myblog/the-famous-pentium-fdiv-bug/</link>
      <pubDate>Mon, 08 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-famous-pentium-fdiv-bug/</guid>
      <description>One of my favourite CPUs from my CPU collection is the original Pentium 60MHz shown here. The reason that this model (SX835 with Gold top) is one of my favourites in not because it looks good, but rather that it was one of the Pentium models that had the famous FDIV bug.
The FDIV bug was a problem with the floating point unit in early Pentium CPUs that resulted in reduced precision of division operations (FDIV is the x86 assembly language instruction for floating point division).</description>
    </item>
    
    <item>
      <title>The Unisys ICON</title>
      <link>https://jasoneckert.github.io/myblog/the-unisys-icon/</link>
      <pubDate>Sat, 09 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-unisys-icon/</guid>
      <description>Yesterday, someone reminded me of those old Unisys ICON computers (also called the Burroughs ICON) that were used in Ontario schools back in the 1980s and early 1990s. I used them extensively when I attended Galt Collegiate Institute (one of the oldest high schools in Canada).
To prevent ICONs from being lost in history, I thought I would add a blog entry about them today. The ICON was an overpriced, underpowered custom computer built for the Ontario Ministry of Education for use in their school system (see picture to the left).</description>
    </item>
    
    <item>
      <title>Anatomy of an AS/400</title>
      <link>https://jasoneckert.github.io/myblog/anatomy-of-an-as400/</link>
      <pubDate>Tue, 14 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/anatomy-of-an-as400/</guid>
      <description>During my spring cleaning, I ended up getting rid of my AS/400 model 9404-D10 from 1991.
Since the power supply is dead in it, I decided to disassemble and photograph the inside of this amazing machine. AS/400s are well known for their legendary uptimes, and were the “jewel” of IBM in the late 1980s to 1990s. In 1993, when IBM was close to splitting up their divisions into smaller companies, Bill Gates said that “the only part of IBM that Microsoft would be interested in was the AS/400 division.</description>
    </item>
    
    <item>
      <title>The UNIX way</title>
      <link>https://jasoneckert.github.io/myblog/the-unix-way/</link>
      <pubDate>Tue, 29 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/the-unix-way/</guid>
      <description>Back in the 1980s, someone started the UNIX-HATERS mailing list as a means of venting UNIX-related frustrations. In 1994, Simson Garfinkel, Daniel Weise, and Steven Strassmann collected these frustrations and published them in a book called “The UNIX-HATERS Handbook” with extra commentary aimed to portray one view: UNIX sucks. The book itself contains plenty of great information about different technologies such as shell scripting, UNIX commands, email and file systems – it’s too bad that they cast everything in a very negative light.</description>
    </item>
    
    <item>
      <title>Are you a Mac or a PC?</title>
      <link>https://jasoneckert.github.io/myblog/are-you-a-mac-or-pc/</link>
      <pubDate>Thu, 13 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/are-you-a-mac-or-pc/</guid>
      <description>If you are ultra-Mac, you prefer to use an aesthetic computer that “just works” - as a result, you are usually sexy, artistic and cool.
If you are ultra-PC, you prefer to use a clunky un-aesthetic computer that is difficult to use, crashes often, is a virus hell, yet is guaranteed to work with any piece of hardware with a software driver written by a 10-year-old boy in a barn in China - as a result, you are nerdy, cheap and non-cool.</description>
    </item>
    
    <item>
      <title>Thank you, Apple</title>
      <link>https://jasoneckert.github.io/myblog/thankyou-apple/</link>
      <pubDate>Sat, 27 Oct 2007 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/thankyou-apple/</guid>
      <description>I installed Macintosh OS X 10.5 Leopard on all my Macs today. When you upgrade an OS, you always expect to lose some system settings and have some applications that don’t like the new OS. As a result, I chose to install Leopard on my PowerBook G4 first. It has tons of software and I customized it to the max, so I naturally expected to spend a while tweaking it after the upgrade to get an idea of what I can expect when I upgrade my other computers.</description>
    </item>
    
    <item>
      <title>Roughing it on vacation</title>
      <link>https://jasoneckert.github.io/myblog/roughing-it-on-vacation/</link>
      <pubDate>Sat, 07 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/roughing-it-on-vacation/</guid>
      <description>Yup - it’s vacation time again! And this next week I plan to do nothing but relax, get a tan, drink “Muskoka Dry Pale Ginger Ale” and read a few books that I haven’t had the time to open yet. And yes, my daughter is going to swim all week long - that is her in the water with the kids from the cottage next door.
Now you are probably wondering why I am blogging on my vacation&amp;hellip;&amp;hellip;shouldn’t a vacation be devoid of TV/phones/Internet/computers?</description>
    </item>
    
    <item>
      <title>Linux thin clients</title>
      <link>https://jasoneckert.github.io/myblog/linux-thin-clients/</link>
      <pubDate>Sat, 05 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/linux-thin-clients/</guid>
      <description>Jon “maddog” Hall gave a talk about using Linux thin clients (e.g. the Linux Terminal Server Project) to provide Internet and application access to schools, third-world countries and organizations in general. He specifically noted that thin clients (like the HP Compaq t5125 which only uses 10 Watts of power compared to the 550 Watts used by most computers) could easily provide low-power, high-performance computing on a large scale.
After hearing this, it sparked my curiosity since I typically use Remote Desktop as part of my job to connect to Windows Terminal Servers at our college head office.</description>
    </item>
    
    <item>
      <title>Computer evolution</title>
      <link>https://jasoneckert.github.io/myblog/computer-evolution/</link>
      <pubDate>Fri, 27 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/computer-evolution/</guid>
      <description>OK - so Apple released the new Intel Macs this month and shocked everyone with their amazing speed improvements. But what I noticed is that Apple didn’t create a whole new look for them - essentially, the new line is in the same beautiful package as the iMac G5 and PowerBook. These designs must be very good if Apple is going to stick with them, and as a result, are key turning points in Mac evolution.</description>
    </item>
    
    <item>
      <title>New Years security resolutions for 2006</title>
      <link>https://jasoneckert.github.io/myblog/new-years-security-resolutions-for-2006/</link>
      <pubDate>Sun, 01 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/new-years-security-resolutions-for-2006/</guid>
      <description>1. Don’t give personal information to obtain documents on the web Many sites want you to register to get a free document or certain web page. What do you think they use your information for? Spam, spam and more spam. If you want to get these documents without putting in your personal information, simply put the URL for the site in http://bugmenot.com and get past the registration!
2. Protect against Viruses Use Firefox - Many spyware/malware/viruses have code that targets Internet Explorer.</description>
    </item>
    
    <item>
      <title>Old Macs never die</title>
      <link>https://jasoneckert.github.io/myblog/old-macs-never-die/</link>
      <pubDate>Wed, 18 Aug 2004 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/myblog/old-macs-never-die/</guid>
      <description>We just came back from the Ontario Science Centre today. While my daughter checked out the educational exhibits (obviously learning important information), I was more impressed by the fact that some exhibits that haven&amp;rsquo;t changed for several years are still powered by Mac Classics! And to boot, the exhibits were still pretty damn good with those old computers.</description>
    </item>
    
    <item>
      <title>2. Retro Computers</title>
      <link>https://jasoneckert.github.io/info/retrocomputers/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/info/retrocomputers/</guid>
      <description>Apple Apple Computer was founded by Steve Wozniak and Steve Jobs in 1976. Steve Wozniak provided the technical genius for computer creation, while Steve Jobs provided the expertise in marketing and design. Their first major commercially adopted product was the Apple II in 1977, which had a MOS 6502 CPU (also used in Commodore computers such as the Commodore 64) and shipped with BASIC and the DOS operating system (later versions).</description>
    </item>
    
    <item>
      <title>3. Personal Interests</title>
      <link>https://jasoneckert.github.io/bio/personal/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/bio/personal/</guid>
      <description>Parenting I am a happily divorced proud father of one. I’ve pretty much raised my daughter since she was 5 years old on my own, and yes, I’ve made school lunches, threw kids parties, went to great places (Ontario Science Centre, ROM, SportsWorld, Storybook Gardens, Disney World and more!), spent vacations camping/cottaging, and watched far too many Land Before Time movies. The picture on the left is my daughter while we were vacationing at Disney World in Florida over a decade ago.</description>
    </item>
    
    <item>
      <title>5. Tech Slogans</title>
      <link>https://jasoneckert.github.io/info/techslogans/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://jasoneckert.github.io/info/techslogans/</guid>
      <description>Don&amp;rsquo;t Anthropomorphize computers. They hate that.
I void warranties
I read your email
Linux isn&amp;rsquo;t magic. It&amp;rsquo;s sudo-science.
Kids: Don&amp;rsquo;t try this at ~
Code poet
Byte Me
I see dead pixels
cd /pub; more beer  No, I will not fix your computer
There is no place like 127.0.0.1
There is no place like ::1
Bow before me for I am root
Dilbert is NOT fiction
It must be user error</description>
    </item>
    
  </channel>
</rss>
