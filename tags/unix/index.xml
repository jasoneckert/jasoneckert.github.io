<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UNIX on Welcome to My Site!</title>
    <link>http://jasoneckert.github.io/tags/unix/</link>
    <description>Recent content in UNIX on Welcome to My Site!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://jasoneckert.github.io/tags/unix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installing a fast Linux server on an M1-based Mac</title>
      <link>http://jasoneckert.github.io/myblog/installing-linux-server-on-mac-m1/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/installing-linux-server-on-mac-m1/</guid>
      <description>One of the biggest worries that IT users have regarding Apple&amp;rsquo;s new ARM-based M1 platform is the ability to run virtual machines (VMs) of other operating systems using hypervisor software. And while it&amp;rsquo;s possible to run virtual machines of both Windows and Linux operating systems made for the Intel platform on the M1, the performance cost of translating Intel instructions to ARM is high (even with the optimizations Apple has within their M1 CPU).</description>
    </item>
    
    <item>
      <title>ARM on the desktop is here to stay</title>
      <link>http://jasoneckert.github.io/myblog/arm-on-the-desktop/</link>
      <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/arm-on-the-desktop/</guid>
      <description>Back in the 1990s, Reduced Instruction Set Computing (RISC) architecture was widely seen as the future. UNIX workstations from Silicon Graphics and Sun Microsystems boasted powerful RISC CPUs at the time, but were prohibitively expensive and died out in the early 2000s as a result. Only the Acorn RISC Machine (ARM) architecture used in low-power devices (e.g. PDAs) survived past the early 2000s, and only because of the rise of mobile devices that relied on battery power.</description>
    </item>
    
    <item>
      <title>UNIX/Linux is now a core skill for anyone working in tech</title>
      <link>http://jasoneckert.github.io/myblog/linux-is-now-a-core-skill/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/linux-is-now-a-core-skill/</guid>
      <description>If you had asked me in the 1990s whether most people in the tech world would be using a UNIX or Linux shell to manage their servers, I would have chuckled and said &amp;ldquo;No.&amp;rdquo; But two decades later we find ourselves in a world where 96% of the cloud is comprised of Linux servers running Web apps made with open source frameworks, and the majority of software development is done on UNIX (macOS) or Linux workstations.</description>
    </item>
    
    <item>
      <title>An introduction to WireGuard VPN</title>
      <link>http://jasoneckert.github.io/myblog/an-introduction-to-wireguard-vpn/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/an-introduction-to-wireguard-vpn/</guid>
      <description>1. Why WireGuard? When it comes to encrypting traffic between systems, there are a wide variety of different Virtual Private Network (VPN) software available, some of which have been used since the 1990s. Each of them focus on different encryption algorithms and flow control strategies, alongside mechanisms for providing for secure authentication and negotiating encryption keys. Unfortunately, this complexity often translates to more problems, slower traffic, as well fewer use cases and supported operating systems.</description>
    </item>
    
    <item>
      <title>2020 in review</title>
      <link>http://jasoneckert.github.io/myblog/2020-in-review/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/2020-in-review/</guid>
      <description>I know what you&amp;rsquo;re thinking - 2020 sucked! Worst year ever! The COVID-19 pandemic, no social gatherings, no dine-in restaurants, no gyms, the US Trumpster fire, and most importantly to those of us in the tech world: Red Hat terminating CentOS development.
Of course, most people will remember 2020 for the pandemic, and that&amp;rsquo;s completely understandable. None of us have experienced a pandemic in our lifetime, and both our society and economy were not prepared to deal with it gracefully.</description>
    </item>
    
    <item>
      <title>5 Z shell features that will encourage you to switch from Bash</title>
      <link>http://jasoneckert.github.io/myblog/moving-from-bash-to-zsh/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/moving-from-bash-to-zsh/</guid>
      <description>The command line interface on your system is provided by a shell. And while there are dozens of different shells available to choose from, nearly every UNIX and Linux system over the past two decades has used the feature-rich Bash shell as the default login shell.
Although the Bash shell still remains the most common login shell used on UNIX and Linux systems, macOS and a few Linux distributions (e.g. Kali) have switched their default shell to the Z shell (zsh), and this trend is likely to continue.</description>
    </item>
    
    <item>
      <title>A brief history of technology</title>
      <link>http://jasoneckert.github.io/myblog/a-brief-history-of-technology/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/a-brief-history-of-technology/</guid>
      <description>Technology is a crazy ride, and like that lyric in the Talking Heads song Once in a Lifetime, &amp;ldquo;&amp;hellip;you may ask yourself, well, how did I get here?&amp;rdquo;
If that&amp;rsquo;s the case, you&amp;rsquo;re in luck, because this post is a no-nonsense, give-me-the-big-picture timeline of what the heck happened in the technology landscape these past 50 years. Of course, not every little detail is in there. Just those that are actually important (in my expert opinion, of course ;-) Enjoy!</description>
    </item>
    
    <item>
      <title>Most people don&#39;t want a computer</title>
      <link>http://jasoneckert.github.io/myblog/most-people-dont-want-a-computer/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/most-people-dont-want-a-computer/</guid>
      <description>In the past few decades, people of all ages across North America have become technology-literate in some way or another. Many of them weren&amp;rsquo;t introduced to technology via desktop or laptop computers, but instead through a smartphone or tablet. Similarly, many desktop and laptop users have switched to using their smartphone or tablet over the past decade to interact with the online world.
After all, smartphones and tablets are incredibly easy to use.</description>
    </item>
    
    <item>
      <title>Open does not always mean Open Source</title>
      <link>http://jasoneckert.github.io/myblog/open-does-not-always-mean-open-source/</link>
      <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/open-does-not-always-mean-open-source/</guid>
      <description>In the technology world today, the term Open is most commonly associated with Open Source.
Open Source refers to software released under a license that gives other software developers access to modify the original Source code that was used to create the software. This, in turn allows other software developers worldwide to quickly identify and fix bugs and security loopholes, as well as make feature improvements to the software. Consequently, Open Source software evolves more rapidly than other (Closed Source) software, and is considered the gold standard for software today.</description>
    </item>
    
    <item>
      <title>Tracing difficult shell scripts</title>
      <link>http://jasoneckert.github.io/myblog/tracing-difficult-shell-scripts/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/tracing-difficult-shell-scripts/</guid>
      <description>Whether you&amp;rsquo;re an IT systems administrator, developer or devop working with Linux/UNIX shell scripts, you&amp;rsquo;re likely going to come across some that are not well documented and difficult to trace (read and understand) as a result.
While these scripts discourage others from tracing them, you can easily trace even the most difficult shell scripts if you follow good tracing procedures. Moreover, by tracing a difficult shell script, you build your knowledge of specific Linux/UNIX components, as well as scripting in general.</description>
    </item>
    
    <item>
      <title>FreeBSD UNIX for Linux sysadmins</title>
      <link>http://jasoneckert.github.io/myblog/freebsd-unix-for-linux-sysadmins/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/freebsd-unix-for-linux-sysadmins/</guid>
      <description>If you’ve ever installed and explored another Linux distro (what Linux sysadmin hasn’t?!?), then exploring FreeBSD is going be somewhat similar with a few key differences. While there is no graphical installation, the installation process is straightforward and similar to installing a server-based Linux distro. Just make sure you choose the local_unbound package when prompted if you want to cache DNS lookups locally, as FreeBSD doesn’t have a built-in local DNS resolver that does this.</description>
    </item>
    
    <item>
      <title>2019 in review</title>
      <link>http://jasoneckert.github.io/myblog/2019-in-review/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/2019-in-review/</guid>
      <description>This year was flat-out awesome! I can’t think of many years in the past decade that had the same amount of academic, physical, and personal fulfillment all in one year!
On the academic side, I presented a 12-week Linux+ webinar series at night to IT instructors worldwide for the Computing Technology Industry Association (CompTIA) Instructor Network.
This, of course, fit well since I just finished writing the 5th edition of my Linux textbook for Cengage (Linux+ &amp;amp; LPIC Guide to Linux Certification).</description>
    </item>
    
    <item>
      <title>Reviving an ancient BSD UNIX workstation</title>
      <link>http://jasoneckert.github.io/myblog/reviving-an-ancient-bsd-workstation/</link>
      <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/reviving-an-ancient-bsd-workstation/</guid>
      <description>Most people will look at this 3-foot-long behemoth of ancient electronics and wonder why it wasn’t scrapped decades ago. But for many of us in the tech industry, these ancient machines are a way to peer into the early days of an industry that has twisted and evolved in leaps and bounds, leaving nearly every player that shaped its landscape forgotten in time.
The machine sitting in my driveway at the top of this post is a workstation from the early 1980s with a NS32016 CPU (the first 32-bit general purpose microprocessor) and a whopping 1MB of RAM.</description>
    </item>
    
    <item>
      <title>How to learn vi (vim)</title>
      <link>http://jasoneckert.github.io/myblog/how-to-learn-vi-vim/</link>
      <pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/how-to-learn-vi-vim/</guid>
      <description>1. So, what is vi (and vim)? One of the most important tools for any developer or sysadmin on UNIX and Linux systems is a text editor. Mastering a text editor allows you to quickly create and edit the source code for programs, scripts and configuration files (nearly all configuration on a UNIX/Linux system is stored as text).
The vi editor has been one of the most common (if not THE most common) text editor on these systems since it was created in 1969 by Bill Joy.</description>
    </item>
    
    <item>
      <title>The UNIX Philosophy in 2019</title>
      <link>http://jasoneckert.github.io/myblog/the-unix-philosophy-in-2019/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/the-unix-philosophy-in-2019/</guid>
      <description>Earlier this week, I did a presentation for WWITPRO that detailed the UNIX philosophy and its relevance today. Given the subject matter, I decided to do the presentation in PostScript on my SPARCbook running Sun Solaris 2.5.1. This blog post details the content of the presentation for posterity!
What is UNIX? Simply put, UNIX is an operating system that was created by Ken Thompson in 1969 that was rewritten shortly thereafter in Dennis Ritchie’s C programming language.</description>
    </item>
    
    <item>
      <title>How ricing shifted from cars to computers</title>
      <link>http://jasoneckert.github.io/myblog/how-ricing-shifted-from-cars-to-computers/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/how-ricing-shifted-from-cars-to-computers/</guid>
      <description>Back in the early 1990s, teenagers with a drivers license made a hobby of tweaking out their cars - adding custom grills, spoilers, paint jobs, and so on. The more crazy, the better. And since the most common car to perform these modifications on were older Honda Civics, which you could get fairly cheap at the time, especially if they were more than 5 years old and needed a bit of work.</description>
    </item>
    
    <item>
      <title>SPARCbook 3000ST: The coolest 90s laptop</title>
      <link>http://jasoneckert.github.io/myblog/sparcbook3000st-the-coolest-90s-laptop/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/sparcbook3000st-the-coolest-90s-laptop/</guid>
      <description>A few weeks back I managed to pick up an incredibly rare laptop in immaculate condition for $50 on Kijiji: a Tadpole Technologies SPARCbook 3000ST from 1997 (it also came with two other working Pentium laptops from the 1990s).
I had to drive almost three hours to pick it up on the other side of Toronto, but for a SPARCbook it was definitely worth it seeing as I&amp;rsquo;m more likely to find the lost city of Atlantis than another one of these again.</description>
    </item>
    
    <item>
      <title>SSH Foo</title>
      <link>http://jasoneckert.github.io/myblog/ssh-foo/</link>
      <pubDate>Sun, 09 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/ssh-foo/</guid>
      <description>Last week, I gave a presentation at a local LUG (which is a Linux User’s Group, for anyone who hasn’t heard of those before) on the subject of SSH Foo.
In UNIX circles, we refer to tricks of the trade as “Kung Fu” or just “Fu” (which sounds rude), so it is spelled “Foo” ;-)
In this blog post, I’ll summarize my SSH Foo talk! Be aware that this is not an introduction to SSH, but a more advanced look at some interesting SSH features for those who are already comfortable with it.</description>
    </item>
    
    <item>
      <title>Halt and Catch Fire</title>
      <link>http://jasoneckert.github.io/myblog/halt-and-catch-fire/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/halt-and-catch-fire/</guid>
      <description>Halt and Catch Fire is an AMC television series that ran for four seasons from 2014-2017, and covers the culture and pivotal aspects of the computing industry from 1983 (just after the release of the IBM PC) to 1994 (when the Internet and World Wide Web exploded).
You can binge watch it on Netflix if you like today, and trust me - you won’t be disappointed! Halt and Catch Fire is the best drama I’ve ever seen - an emotional rollercoaster like no other.</description>
    </item>
    
    <item>
      <title>Ultimate UNIX timeline</title>
      <link>http://jasoneckert.github.io/myblog/ultimate-unix-timeline/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/ultimate-unix-timeline/</guid>
      <description>One thing that has always annoyed me about the Internet surrounds the history and evolution of UNIX-based operating systems. If you Google “UNIX timeline”, you’ll get a bunch of different results that are either incomplete, incorrect, complicated to the point where it’s unreadable, or a combination of all of these things.
So this blog post aims to rectify this!
Here are some important things to note about UNIX in general and each of the UNIX flavours depicted on this timeline:</description>
    </item>
    
    <item>
      <title>The history of IT certification</title>
      <link>http://jasoneckert.github.io/myblog/history-of-it-certification/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/history-of-it-certification/</guid>
      <description>Nearly everyone working in an Information Technology (IT) field has at least one IT-related certification. This is because IT certification is commonly used as a skills benchmark for hiring and promotion, and it’s been that way for a long, long time.
So where did all this certification stuff start? If you look online, there isn’t even a Wikipedia page that can give you that answer - like many things in the technology world that predated the Internet, it just wasn’t important enough to keep track of in the Internet Age that started in the 1990s.</description>
    </item>
    
    <item>
      <title>macOS for Linux admins</title>
      <link>http://jasoneckert.github.io/myblog/macos-for-linux-admins/</link>
      <pubDate>Sat, 17 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/macos-for-linux-admins/</guid>
      <description>As I mentioned in my CompTIA blog post All About Linux and Linux+ ( https://www.comptia.org/blog/all-about-linux-and-linux ), Linux is essentially an open-source UNIX operating system. And since nearly all of the concepts, commands and files are identical between UNIX and Linux, anyone who works with Linux could easily administer a UNIX system.
Likewise, the macOS operating system that runs on Apple computers is also a flavor of UNIX. Thus, most of the concepts that you use when administering a Linux system are also applicable to macOS.</description>
    </item>
    
    <item>
      <title>RIP Solaris</title>
      <link>http://jasoneckert.github.io/myblog/rip-solaris/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/rip-solaris/</guid>
      <description>The 80s and 90s was a period of intense development in the computer hardware and software worlds. On the hardware side, processors started to become much more powerful, and the word on the streets was that RISC (Reduced Instruction Set Computing) was going to be the way of the future. Powerful RISC platforms emerged during this time, including Sun Microsystems SPARC, HP PA-RISC, SGI MIPS, IBM PowerPC, and the DEC Alpha - these platforms were very powerful, and ushered in 64-bit computing over a decade before it became common in home computers.</description>
    </item>
    
    <item>
      <title>50 shades of Cray</title>
      <link>http://jasoneckert.github.io/myblog/50-shades-of-cray/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/50-shades-of-cray/</guid>
      <description>If you wanted a fast computer back in 1976, you bought the 5.5 ton, $9 million Cray-1 made by Cray Research. The Cray-1 was dubbed the first supercomputer as it was designed to be much faster than other (more massive) computers of the time.
It was incredibly successful in the large computing space and Cray subsequently released a much faster model called the Cray X-MP in 1983 (shown in the picture at the top of this post).</description>
    </item>
    
    <item>
      <title>Microsoft ReFS vs Oracle ZFS - FIGHT!</title>
      <link>http://jasoneckert.github.io/myblog/refs-vs-zfs-fight/</link>
      <pubDate>Tue, 25 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/refs-vs-zfs-fight/</guid>
      <description>In the past, most IT admins have put their faith in systems and SANs (Storage Area Networks) that use RAID (Redundant Array of Inexpensive Disks) technology. RAID can be used to combine hard disks together into simple volumes (called RAID-0, or JBOD) that aren’t fault tolerant, but can also be used to create mirrored volumes where both drives are identical in case one fails (called RAID-1), or striped volumes with parity where data is written across several disks with parity information that can be used to calculate the missing data if a drive fails (called RAID-5).</description>
    </item>
    
    <item>
      <title>Impressed by a 10 year old desktop computer</title>
      <link>http://jasoneckert.github.io/myblog/impressed-by-a-10-year-old-desktop/</link>
      <pubDate>Thu, 28 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/impressed-by-a-10-year-old-desktop/</guid>
      <description>Long story short, I scored a free SGI Fuel computer along with the SGI Origin 300 computer I described two posts ago.
But the SGI Fuel is a much more “usable” computer because it is a powerful single-processor graphical desktop computer (what Silicon Graphics was best known for).
Here is what it comes with:
 4GB RAM 600MHz R14000A MIPS CPU (64-bit) Two SCSI hard disks DVD writer Odyssey video card (DVI) that takes up the entire bottom of the cabinet IRIX 6.</description>
    </item>
    
    <item>
      <title>QNX on a moon rover</title>
      <link>http://jasoneckert.github.io/myblog/qnx-on-a-moon-rover/</link>
      <pubDate>Mon, 02 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/qnx-on-a-moon-rover/</guid>
      <description>Back in September 2011, a group of McMaster business and engineering students started a project aimed to build a moon rover that would be run by the QNX operating system on a BlackBerry PlayBook - a Canadian initiative with Canadian technologies (QNX is 100% Canadian). Here is a link to the original article on CrackBerry.com from the beginning of the project: https://crackberry.com/forums-new-group-aims-put-blackberry-playbook-powered-rover-moon
I reached out to them because of that article since I’ve had experience with QNX and PlayBook development.</description>
    </item>
    
    <item>
      <title>The rise and fall of DEC</title>
      <link>http://jasoneckert.github.io/myblog/the-rise-and-fall-of-dec/</link>
      <pubDate>Wed, 26 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/the-rise-and-fall-of-dec/</guid>
      <description>Firstly, the information that I’m presenting here is taken from various sources, including people I knew who worked for DEC, my own experiences, and the book DEC Is Dead, Long Live DEC by Edgar H. Schein.
Quick background info: DEC was the first knowledge-based company - a company who valued the knowledge of its employees over anything else, and used it to drive change and sell products.
The founder and father icon of DEC, Ken Olsen, spent time working at IBM.</description>
    </item>
    
    <item>
      <title>All about DEC</title>
      <link>http://jasoneckert.github.io/myblog/all-about-dec/</link>
      <pubDate>Mon, 24 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/all-about-dec/</guid>
      <description>Digital Equipment Corporation (DEC) was born in the late 1950s when it was lucrative to make computers that cost a ton of money. And DEC was good - they would make computers that would perform much better and cost significantly less than the IBM equivalent (IBM mainframes back then were expensive behemoths).
The DEC PDP (Programmed Data Processor) line of minicomputers were so good and inexpensive, you’d be hard pressed to NOT find one in your local university.</description>
    </item>
    
    <item>
      <title>NeXTSTEP is cool</title>
      <link>http://jasoneckert.github.io/myblog/nextstep-is-cool/</link>
      <pubDate>Mon, 16 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/nextstep-is-cool/</guid>
      <description>When Steve Jobs left Apple in the 1980s, he started a new venture that produced NeXT UNIX computers that ran a custom UNIX system called NeXTSTEP on Motorola 68000-series computers. The first Web browser was made my Tim Berners-Lee on one of these NeXT computers!
When I was an undergrad student at the University of Waterloo, we had a few NeXT computers (literally two of them I believe) and a bunch of HP PA-RISC 712s running NeXTSTEP for object-oriented software development (it was more common to see Sun or SGI UNIX systems at the university back them).</description>
    </item>
    
    <item>
      <title>The death of SGI</title>
      <link>http://jasoneckert.github.io/myblog/the-death-of-sgi/</link>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/the-death-of-sgi/</guid>
      <description>Today is definitely a sad day - SGI announced their bankruptcy.
SGI was once a great company - in the 1990s, they made the best computers ever, such as the Indigo2, O2, and Octane. The cases and designs looked awesome, and they had amazingly fast 64-bit MIPS RISC CPUs and stellar video cards! Plus, they made an excellent graphical UNIX operating system: IRIX.
Although I am a Mac OS X UNIX user now, IRIX will always be my favourite UNIX.</description>
    </item>
    
    <item>
      <title>10 years of UserFriendly.org</title>
      <link>http://jasoneckert.github.io/myblog/10-years-of-userfriendly/</link>
      <pubDate>Sun, 08 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/10-years-of-userfriendly/</guid>
      <description>I haven’t blogged for a while.
This is partly because my daughter and I have been enjoying some major events in Toronto (Ontario Science Centre, ROM, shopping, more shopping, etc.), and not much has happened in the Geek world aside from the new Apple hardware updates and Firefox achieving 100% market share in Antarctica.
However, the main reason I haven’t blogged is that I have been engrossed with reading the 10th Anniversary book from UserFriendly.</description>
    </item>
    
    <item>
      <title>Happy Epoch Day!</title>
      <link>http://jasoneckert.github.io/myblog/happy-epoch-day/</link>
      <pubDate>Fri, 13 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/happy-epoch-day/</guid>
      <description>Today is a special day in the I-don’t-have-a-life-and-can-prove-it-mathematically geek world&amp;hellip;..for today, the epoch will be 1234567890 at precisely 6:31pm (and 30 seconds) Eastern time.
UNIX (including Mac OS X) and Linux systems use an internal time called the epoch - it is the number of seconds since January 1st, 1970 (the “birth” of UNIX). This is also why UNIX and Linux geeks weren’t too concerned that their OS was going to blow up at Y2K, since the time would simply be 946684800.</description>
    </item>
    
    <item>
      <title>The Nostradamus of UNIX</title>
      <link>http://jasoneckert.github.io/myblog/the-nostradamus-of-unix/</link>
      <pubDate>Thu, 22 May 2008 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/the-nostradamus-of-unix/</guid>
      <description>Every so often I re-read a book that I read years ago to remember what it is about. Mostly, I re-read sci-fi or notable works such as Neuromancer (William Gibson) or The Hitchhiker’s Guide to the Galaxy (Douglas Adams) since those are the types of books that I kept over the years.
However, I kept a book from 1989 called Life with UNIX (Don Libes &amp;amp; Sandy Ressler) that I remember using as a good UNIX reference a long time ago.</description>
    </item>
    
    <item>
      <title>The UNIX way</title>
      <link>http://jasoneckert.github.io/myblog/the-unix-way/</link>
      <pubDate>Tue, 29 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/the-unix-way/</guid>
      <description>Back in the 1980s, someone started the UNIX-HATERS mailing list as a means of venting UNIX-related frustrations. In 1994, Simson Garfinkel, Daniel Weise, and Steven Strassmann collected these frustrations and published them in a book called “The UNIX-HATERS Handbook” with extra commentary aimed to portray one view: UNIX sucks. The book itself contains plenty of great information about different technologies such as shell scripting, UNIX commands, email and file systems – it’s too bad that they cast everything in a very negative light.</description>
    </item>
    
    <item>
      <title>The wicked witch is dead</title>
      <link>http://jasoneckert.github.io/myblog/the-wicked-witch-is-dead/</link>
      <pubDate>Sun, 12 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/myblog/the-wicked-witch-is-dead/</guid>
      <description>I consider myself to be a very patient person (all things considered) - but one thing that causes me to lose my patience is when I hear of proprietary computer companies that spread FUD (Fear, Uncertainty and Doubt) in order to keep their customers from considering other (and usually much better) technologies.
While Microsoft has been the main purveyor of FUD since the early 1990s, SCO used FUD in an attempt to downplay the Linux operating system.</description>
    </item>
    
    <item>
      <title>1. Operating Systems</title>
      <link>http://jasoneckert.github.io/info/operatingsystems/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/info/operatingsystems/</guid>
      <description>UNIX UNIX is the grandfather of all modern operating systems, and today it still remains the most powerful and least known. But if you use an Apple computer running macOS, or an iPhone or iPad running iOS, you are using a UNIX operating system. And if you do online banking, somewhere tucked away in the bank is likely a series of UNIX systems running Oracle Solaris UNIX, HP-UX UNIX, or AIX UNIX.</description>
    </item>
    
    <item>
      <title>2. My published books</title>
      <link>http://jasoneckert.github.io/bio/my-published-books/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/bio/my-published-books/</guid>
      <description>Perhaps one of my more famous achievements is the authoring of several textbooks for Course Technology, Cengage, Nelson, Thompson/Delmar and Wiley. I&amp;rsquo;ve listed their details in chronological order here (oldest to newest) with cover pictures below:
 Linux+ Guide to Linux Certification (ISBN: 0-619-13004-0) Guide to UNIX System Administration (ISBN: 0-619-13041-5) Linux+ In Depth (ISBN: 1-59200-062-2) MCSE Guide to Managing a Microsoft Windows Server 2003 Network (ISBN: 0-619-12029-0) Linux+ Guide to Linux Certification - 2nd Edition (ISBN: 0-619-21621-2) Linux+ 2005 In Depth (ISBN: 1-59200-728-7) Novell&amp;rsquo;s Guide to CompTIA&amp;rsquo;s Linux+ (Course 3060) (ISBN: 1-4188-3730-X) SUSE Linux Enterprise Server Administration (Course 3037) (ISBN: 1-4188-3731-8) Advanced SUSE Linux Enterprise Server Administration (Course 3038) (ISBN: 1-4188-3732-6) Microsoft Windows Vista Guide (ISBN: 1-4188-3757-1) SUSE Linux Enterprise Desktop Administration (ISBN: 1-4283-2227-2) SUSE Linux Enterprise Server Security (ISBN: 1-4283-2223-X) Microsoft Official Academic Course (MOAC): Exchange Server 2007 Exam 70-236 (ISBN: 978-0-470-31227-8) Linux+ Guide to Linux Certification - 3rd Edition (ISBN: 978-1-418-83721-1) SUSE Linux Enterprise Server 11 Administration (ISBN: 978-1-111-54003-6) Linux+ Guide to Linux Certification - International Edition (ISBN: 978-1-111-54153-8) Linux+ Guide to Linux Certification - 4th Edition (ISBN: 978-1-305-10716-8) Linux+ and LPIC-1 Guide to Linux Certification - 5th Edition (ISBN: 978-13375-6979-8) Hands-On Windows Server 2019 - 3rd Edition (ISBN: 978-0-357-43615-8)  Moreover, I&amp;rsquo;ve worked as a technical editor for numerous Linux and software development titles for both Wiley and Pearson, as well as wrote 6 books for Research in Motion (RIM) on BlackBerry Enterprise Server 4.</description>
    </item>
    
    <item>
      <title>2. Retro Computers</title>
      <link>http://jasoneckert.github.io/info/retrocomputers/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>http://jasoneckert.github.io/info/retrocomputers/</guid>
      <description>Apple Apple Computer was founded by Steve Wozniak and Steve Jobs in 1976. Steve Wozniak provided the technical genius for computer creation, while Steve Jobs provided the expertise in marketing and design. Their first major commercially adopted product was the Apple II in 1977, which had a MOS 6502 CPU (also used in Commodore computers such as the Commodore 64) and shipped with BASIC and the DOS operating system (later versions).</description>
    </item>
    
  </channel>
</rss>
