<?xml version="1.0"?>
<content collectionGUID="6CD99A98-03EA-45F6-9464-3BE6AB01739F">
  <lastEdited clientType="local-build-20200627" date="2020-06-28 02:22:22 +0000"/>
  <textBox id="generic-title-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;The different faces of open source software&lt;/b&gt;</richText>
  </textBox>
  <textBox id="generic-datefield-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;Friday, August 9, 2019&lt;/b&gt;</richText>
  </textBox>
  <textBox id="generic-body-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;The term &lt;/b&gt;&lt;b&gt;open source&lt;/b&gt;&lt;b&gt; has become a household term in software circles.  Most people who work with technology in some capacity know that the Linux operating system is open source, as is the Firefox Web browser and much of the software that runs on their Android phone.&#xD;&#xD;However, when it comes to defining open source, most people I&#x2019;ve talked to aren&#x2019;t that clear on what it is and how it works, but can often list these three aspects:&#xD;&lt;/b&gt;&lt;b&gt;	1.	It is freely/collaboratively developed&#xD;	2.	Bugs and security loopholes can be detected and fixed much quicker than with closed source software&#xD;	3.	It evolves much faster and to a greater extent than closed source software&#xD;&lt;/b&gt;&lt;b&gt;&#xD;&lt;/b&gt;&lt;b&gt;But what is open source, exactly?&#xD;&lt;/b&gt;&lt;b&gt;&#xD;At a fundamental level, open source simply means that &lt;/b&gt;&lt;b&gt;the source code for the software is made available to other software developers.  What other developers are allowed to do with it afterwards depends on the specific open source license that is used. In general, there are two types of open source licenses &lt;/b&gt;&lt;b&gt;available: &#xD;&lt;/b&gt;&lt;b&gt;	1.	Copyleft licenses, that are promoted by the &lt;/b&gt;&lt;b&gt;Free Software Foundation (FSF)&lt;/b&gt;&lt;b&gt; &#xD;	2.	Permissive licenses &#xD;&lt;/b&gt;&lt;b&gt;&#xD;&lt;/b&gt;&lt;b&gt;Copyleft licenses&lt;/b&gt;&lt;b&gt; have more restrictions on what happens to the source code once someone modifies it.  In short, if you modify source code released under a copyleft license, you are legally bound to publicly provide the source code for your modifications. This makes copyleft licenses ideal for larger, foundational software products like the Linux operating system where long-term growth and collaboration/standardization should be mandatory.  There are many copyleft licenses available for developers to choose from. The GNU General Public License version 2 (&lt;/b&gt;&lt;b&gt;GPLv2&lt;/b&gt;&lt;b&gt;) provides a moderate set of restrictions on the source code, whereas &lt;/b&gt;&lt;b&gt;GPLv3&lt;/b&gt;&lt;b&gt; provides a high set of restrictions that is better in line with what the FSF promotes. Some copyleft licenses, such as the Mozilla Public License (&lt;/b&gt;&lt;b&gt;MPL&lt;/b&gt;&lt;b&gt;), provide a lower set of restrictions compared to others but still require that modified source code is made available to others.&#xD;&#xD;In contrast to copyleft licenses, &lt;/b&gt;&lt;b&gt;permissive licenses&lt;/b&gt;&lt;b&gt; do not force software developers to publicly provide the modifications that they make to source code that they have obtained. This means that a software developer could copy the source code for software released under a permissive license and modify it for their own private or commercial use, just as long as they cite the original author of the software. This makes permissive licenses more attractive for those who want their software to be incorporated into larger systems or other projects (e.g. startups). Microsoft used the TCP/IP source code from BSD UNIX under a permissive license to create their own TCP/IP software for Windows in order to quickly get Windows on the Internet bandwagon in the 1990s. Today, about half of the underlying macOS operating system, including a third of the macOS kernel is taken from FreeBSD using a permissive license. There are many permissive licenses available, including the Massachusetts Institute of Technology (&lt;/b&gt;&lt;b&gt;MIT&lt;/b&gt;&lt;b&gt;), Berkeley Software Distribution (&lt;/b&gt;&lt;b&gt;BSD&lt;/b&gt;&lt;b&gt;) and &lt;/b&gt;&lt;b&gt;Apache&lt;/b&gt;&lt;b&gt; licenses. Each one varies in the fine print (copyright use, patent terms, whether modifications require notification, etc.).&#xD; &#xD;In the 2000s, copyleft licenses were the dominant license used for open source software, primarily because most open source software revolved around Linux.  However, with the rise of startup culture and explosion of varied software projects this past decade, permissive licenses are now more common. Moreover, permissive licenses are easier for developers to understand, and often allow developers to incorporate other open source software that use different permissive licenses. &#xD;&#xD;While different sites on the Internet list different market share breakdowns for open source licenses, the MIT license is often listed as the most frequently-used. The Apache and GPLv2 licenses usually take second and third place, with all others trailing far behind.  &#xD;&#xD;&lt;/b&gt;&lt;b&gt;So, what is FOSS/FLOSS?&#xD;&lt;/b&gt;&lt;b&gt;&#xD;Simply put, the FSF encourages people to use the term &lt;/b&gt;&lt;b&gt;Free and Open Source Software (FOSS)&lt;/b&gt;&lt;b&gt; when referring to open source software today. More specifically, FOSS refers to software that ethically respects the user&#x2019;s freedom (use, copy, study, modify).  Since users may not completely understand that the word free was intended to refer to freedom and not price, the FSF now refers to FOSS as &lt;/b&gt;&lt;b&gt;Free/Libre and Open Source Software (FLOSS)&lt;/b&gt;&lt;b&gt;.&#xD;&#xD;Since permissive licenses can potentially allow software to make its way into proprietary, closed source systems that restrict user freedom, many people in the open source community equate FOSS/FLOSS with copyleft licenses only and criticize permissive licenses for benefiting companies that want to incorporate open source software in their own closed source products. This is reflected in the &lt;/b&gt;&lt;b&gt;&lt;a href="https://www.linuxjournal.com/content/linux-journal-ceases-publication-awkward-goodbye"&gt;goodbye statement&lt;/a&gt;&lt;/b&gt;&lt;b&gt; from the Linux Journal magazine, which ceased publication this week amid financial difficulty: &#xD;&#xD;&lt;/b&gt;&lt;b&gt;&lt;i&gt;"It became clearer than ever to me that while Linux and FOSS had won the battle over the tech giants a decade before, new ones had taken their place in the meantime, and we were letting them win."&#xD;&lt;/i&gt;&lt;/b&gt;&lt;b&gt;&#xD;While it is very true that most companies (including all of the tech giants) have incorporated a great deal of permissively-licensed open source software this past decade, I see this more as an evolutionary inevitability in the technology market. Copyleft licenses are still alive and well with many projects (e.g. Linux, the largest open source project), and these projects often provide foundational technologies to the entire industry that must remain openly-developed.  The adoption of permissively-licensed open source software by companies isn&#x2019;t necessarily a bad thing - it provides continuous economic benefits that have made open source the standard for most software projects this past decade (which is why permissive licenses are more common).  In other words, it adds a healthy balance to the open source ecosystem to ensure that open source software continues to thrive.  &#xD;&#xD;&lt;/b&gt;&lt;b&gt;It&#x2019;s difficult to be 100% open source&#xD;&lt;/b&gt;&lt;b&gt;&#xD;Even if you run Linux as your main operating system, there are still some closed source components (drivers, firmware) that you may be using on your system.  To make the user experience seamless, nearly all mainstream Linux distributions ship with these components in the installation media so that you don&#x2019;t need to install them afterwards. This is why the FSF (which believes all software should be copyleft) only recommends a few obscure Linux distributions on their website that do not ship with these components (e.g. &lt;/b&gt;&lt;b&gt;Trisquel Linux&lt;/b&gt;&lt;b&gt;). &#xD;&#xD;Moreover, the low-level software that starts your computer and allows the operating system to access the hardware is not open source on most systems.  This low-level software is called the BIOS (or UEFI BIOS). And while developers have created open source replacements for the BIOS (e.g. &lt;/b&gt;&lt;b&gt;Libreboot&lt;/b&gt;&lt;b&gt; and &lt;/b&gt;&lt;b&gt;Coreboot&lt;/b&gt;&lt;b&gt;), hardware support for them are limited, in part because of other proprietary hardware components within your system and CPU.&#xD;&#xD;Speaking of CPUs, nearly all CPU hardware (e.g. Intel, AMD and ARM) are proprietary, but people are developing a new open source CPU architecture called &lt;/b&gt;&lt;b&gt;RISC-V&lt;/b&gt;&lt;b&gt; that seems to be catching on quickly.  &#xD;&#xD;So, if you are dead set on being 100% open source, you may eventually be able to buy a RISC-V computer that uses Libreboot to load a Linux operating system that doesn&#x2019;t support any proprietary hardware.&#xD;&#xD;For most of us, however, using open source software whenever possible (if there is a choice) is probably good enough to feel like we&#x2019;re participating in the open source community.&lt;/b&gt;</richText>
  </textBox>
  <image id="generic-picture-attributes" dynamic="no" visible="yes" src="9_The_different_faces_of_open_source_software_files/shapeimage_1.png" left="0px" top="0px" width="700px" height="400px"/>
</content>
