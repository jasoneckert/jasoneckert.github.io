<?xml version="1.0"?>
<content collectionGUID="6CD99A98-03EA-45F6-9464-3BE6AB01739F">
  <lastEdited clientType="local-build-20200627" date="2020-06-28 02:21:39 +0000"/>
  <textBox id="generic-title-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;Math education reform&lt;/b&gt;</richText>
  </textBox>
  <textBox id="generic-datefield-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;Sunday, June 12, 2011&lt;/b&gt;</richText>
  </textBox>
  <textBox id="generic-body-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;Last week, Robert French sent me the following video link with the subject line &#x201C;Something to think about&#x201D;: &lt;/b&gt;&lt;b&gt;&lt;a href="http://www.ted.com/talks/dan_meyer_math_curriculum_makeover.html"&gt;http://www.ted.com/talks/dan_meyer_math_curriculum_makeover.html&lt;/a&gt;&lt;/b&gt;&lt;b&gt; &#xD;&#xD;I encourage everyone (both math literate and illiterate) to watch it, as the information within is widely applicable to learning in general.&#xA0; &#xD;&#xD;In short, the presenter in the video (Dan Meyer, a high school math teacher) discusses the challenges with teaching math in the classroom and why math education today is flawed.&#xA0; &#xD;&#xD;With good examples, he discusses why the careful step-wise &#x201C;monkey see monkey do&#x201D; techniques used in textbooks and the classroom leads to a lack of initiative, creativity, perseverance and retention in students, as well as how this destructive approach to problem solving mirrors all facets of society today (think sitcoms, immediate feedback, and the need to be constantly entertained).&#xD;&#xD;As an educator, I&#x2019;ve also seen this in the classroom.&#xA0; It is especially prevalent in computer programming courses (most programming courses involve mathematical problem solving, especially video game programming).&#xD;&#xD;On a broader level, I&#x2019;ve seen this all throughout my own academic and professional career.&#xA0; My background is science, and my forte is taking scientific problems, creating computational models for them and then analyzing them with regression analysis on large systems (e.g. Sharcnet) to do wonderful things.&#xA0; &#xD;&#xD;I&#x2019;m well known for saying that &#x201C;scientists are amongst the best mathematicians and computer programmers in the world&#x201D; because we have to constantly search for ways to apply technical/mathematical knowledge to questions about our universe.&#xA0; For example, if you are trying to predict snow erosion in the next 100 years for the Canadian Shield, you need to monitor thousands of factors (snow depth, where it came from, how it is regenerated, etc.) and then plug your data into a program that you create to carefully calculate how the pieces of information can work together as a whole in order to explain the current erosion process, and extrapolate it to future erosion with a reasonable estimate of error.&#xD;&#xD;However, all of the math and science courses that I took in high school and university simply taught me how to solve a specific problem when I was given all of the necessary pieces of information - those that rose above the crowd and became scientists and mathematicians were those who were able to ask themselves &#x201C;What am I doing and why?&#x201D;&#xA0; as well as tediously apply everything to other situations and problems of their own creation.&#xA0; &#xD;&#xD;For example, I remember taking an Invertebrate Zoology course one time (something that I wasn&#x2019;t too interested in but needed the Biology credit for) and the professor talked about some measurements he took to learn how certain invertebrates were distributed around hot vents at the bottom of the ocean, and how the number changed with the depth, temperature, and region/sediment.&#xA0; I also remember scribbling down all of the specific measurements from the lecture and spending days and days building a program on one of the SGI workstations in the bio lab that visually recreated the information and allowed you to input your own values to see what effect it would have based on patterns extrapolated from existing information.&#xA0; I didn&#x2019;t do it because I had no life (although that was sort of true) - I did it because it was a problem that I wanted to solve and I had the desire to do so.&#xA0; I learned C++ and modeling techniques from scratch during this process - it was mentally rewarding on many levels, and I&#x2019;ve done similar things hundreds of times during my university career while my classmates just did the required assignments and went to parties.&#xD;&#xD;In my youth, those people with inquisitive passion went on to do great things.&#xA0; I&#x2019;d say about half of every class I took had people with this drive.&#xA0; I suspect it is far less today in the same classes.&#xD;&#xD;It isn&#x2019;t difficult to see that today&#x2019;s society is much lazier than it was when I was younger - people don&#x2019;t want to think for themselves, and are much less likely to dedicate a large amount of time to any particular problem and follow it through to completion.&#xA0; Dan Meyer points out how the educational system has adapted to suit these lazy desires rather than encourage inquisitive passion and structured thought.&#xD;&#xD;In technical fields today, such as systems administration, network administration, and software development (whether it be for apps, web apps, or games), inquisitive passion is critical for success.&#xA0; Too much &#x201C;hand holding&#x201D; prevents people from formulating solutions to problems using technology, and in many ways will stump their educational and personal growth.&#xA0; Something to think about.&lt;/b&gt;</richText>
  </textBox>
  <image id="generic-picture-attributes" dynamic="no" visible="yes" src="12_Entry_1_files/shapeimage_1.png" left="0px" top="0px" width="700px" height="400px"/>
</content>
